{"title":"Spring笔记","uid":"9fe79a5e2d58fcbcba8e87cdea7a0f13","slug":"Spring笔记","date":"2023-02-12T01:34:49.000Z","updated":"2024-04-12T16:20:07.015Z","comments":true,"path":"api/articles/Spring笔记.json","keywords":"Kangwei Zhu's Blog","cover":"/img/rice.jpg","content":"<h1 id=\"手写-简易版-Spring\"><a href=\"#手写-简易版-Spring\" class=\"headerlink\" title=\"手写 简易版 Spring\"></a>手写 简易版 Spring</h1><h2 id=\"1-手写一个注解\"><a href=\"#1-手写一个注解\" class=\"headerlink\" title=\"1. 手写一个注解\"></a>1. 手写一个注解</h2><blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>在 Java 中， 单单写一个注解其实没有什么作用。就像在大街上走路， 你在别人眼中只是一个普通人而已。 注解也是一样，但是在 Java反射 的眼里，注解非常有用（没有 反射， 注解不会生效。</p></blockquote>\n<div class=\"language-java\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">java</span><pre class=\"shiki rose-pine-moon\" style=\"background-color: #232136\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #3E8FB0\">package</span><span style=\"color: #E0DEF4\"> </span><span style=\"color: #3E8FB0\">org</span><span style=\"color: #908CAA\">.</span><span style=\"color: #3E8FB0\">springframework</span><span style=\"color: #908CAA\">.</span><span style=\"color: #3E8FB0\">annotation</span><span style=\"color: #908CAA\">;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #3E8FB0\">import java</span><span style=\"color: #908CAA\">.</span><span style=\"color: #3E8FB0\">lang</span><span style=\"color: #908CAA\">.</span><span style=\"color: #3E8FB0\">annotation</span><span style=\"color: #908CAA\">.</span><span style=\"color: #E0DEF4; font-style: italic\">*</span><span style=\"color: #908CAA\">;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #908CAA; font-style: italic\">/**</span></span>\n<span class=\"line\"><span style=\"color: #6E6A86; font-style: italic\"> * 自定义Service注解</span></span>\n<span class=\"line\"><span style=\"color: #6E6A86; font-style: italic\"> </span><span style=\"color: #908CAA; font-style: italic\">*/</span></span>\n<span class=\"line\"><span style=\"color: #908CAA\">@</span><span style=\"color: #3E8FB0\">Target</span><span style=\"color: #908CAA\">(</span><span style=\"color: #E0DEF4; font-style: italic\">ElementType</span><span style=\"color: #908CAA\">.</span><span style=\"color: #E0DEF4; font-style: italic\">TYPE</span><span style=\"color: #908CAA\">)</span><span style=\"color: #E0DEF4\"> </span><span style=\"color: #908CAA; font-style: italic\">//</span><span style=\"color: #6E6A86; font-style: italic\">表示注解可以作用在类上</span></span>\n<span class=\"line\"><span style=\"color: #908CAA\">@</span><span style=\"color: #3E8FB0\">Retention</span><span style=\"color: #908CAA\">(</span><span style=\"color: #E0DEF4; font-style: italic\">RetentionPolicy</span><span style=\"color: #908CAA\">.</span><span style=\"color: #E0DEF4; font-style: italic\">RUNTIME</span><span style=\"color: #908CAA\">)</span><span style=\"color: #E0DEF4\"> </span><span style=\"color: #908CAA; font-style: italic\">//</span><span style=\"color: #6E6A86; font-style: italic\">运行时生效</span></span>\n<span class=\"line\"><span style=\"color: #908CAA\">@</span><span style=\"color: #3E8FB0\">Documented</span><span style=\"color: #E0DEF4\"> </span><span style=\"color: #908CAA; font-style: italic\">//</span><span style=\"color: #6E6A86; font-style: italic\"> 可以生成doc</span></span>\n<span class=\"line\"><span style=\"color: #3E8FB0\">public</span><span style=\"color: #E0DEF4\"> </span><span style=\"color: #908CAA\">@</span><span style=\"color: #3E8FB0\">interface</span><span style=\"color: #E0DEF4\"> </span><span style=\"color: #3E8FB0\">Service</span><span style=\"color: #E0DEF4\"> </span><span style=\"color: #908CAA\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #E0DEF4\">    </span><span style=\"color: #3E8FB0\">String</span><span style=\"color: #E0DEF4\"> </span><span style=\"color: #EA9A97\">value</span><span style=\"color: #908CAA\">()</span><span style=\"color: #E0DEF4\"> </span><span style=\"color: #3E8FB0\">default</span><span style=\"color: #E0DEF4\"> </span><span style=\"color: #F6C177\">&quot;&quot;</span><span style=\"color: #908CAA\">;</span><span style=\"color: #E0DEF4\"> </span><span style=\"color: #908CAA; font-style: italic\">//</span><span style=\"color: #6E6A86; font-style: italic\">@Service(value = &quot;&quot;)， 一般不设值</span></span>\n<span class=\"line\"><span style=\"color: #908CAA\">&#125;</span></span></code></pre></div><p>根据这个Service注解，我们还可以创建 Controller, Repository等各种注解。</p>\n<h2 id=\"2-模拟业务\"><a href=\"#2-模拟业务\" class=\"headerlink\" title=\"2. 模拟业务\"></a>2. 模拟业务</h2><blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>就用自己的Service, Autowire, Controller注解， 模拟一下业务流程。</p></blockquote>\n<ul>\n<li>Service中的接口</li>\n</ul>\n<div class=\"language-java\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">java</span><pre class=\"shiki rose-pine-moon\" style=\"background-color: #232136\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #3E8FB0\">package</span><span style=\"color: #E0DEF4\"> </span><span style=\"color: #3E8FB0\">com</span><span style=\"color: #908CAA\">.</span><span style=\"color: #3E8FB0\">anicaaz</span><span style=\"color: #908CAA\">.</span><span style=\"color: #3E8FB0\">springplayground</span><span style=\"color: #908CAA\">.</span><span style=\"color: #3E8FB0\">service</span><span style=\"color: #908CAA\">;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #3E8FB0\">public</span><span style=\"color: #E0DEF4\"> </span><span style=\"color: #3E8FB0\">interface</span><span style=\"color: #E0DEF4\"> </span><span style=\"color: #9CCFD8\">UserService</span><span style=\"color: #E0DEF4\"> </span><span style=\"color: #908CAA\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #E0DEF4\">    </span><span style=\"color: #3E8FB0\">int</span><span style=\"color: #E0DEF4\"> </span><span style=\"color: #EA9A97\">add</span><span style=\"color: #908CAA\">();</span></span>\n<span class=\"line\"><span style=\"color: #908CAA\">&#125;</span></span>\n<span class=\"line\"></span></code></pre></div><ul>\n<li>Service中的接口的实现类</li>\n</ul>\n<div class=\"language-java\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">java</span><pre class=\"shiki rose-pine-moon\" style=\"background-color: #232136\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #3E8FB0\">package</span><span style=\"color: #E0DEF4\"> </span><span style=\"color: #3E8FB0\">com</span><span style=\"color: #908CAA\">.</span><span style=\"color: #3E8FB0\">anicaaz</span><span style=\"color: #908CAA\">.</span><span style=\"color: #3E8FB0\">springplayground</span><span style=\"color: #908CAA\">.</span><span style=\"color: #3E8FB0\">service</span><span style=\"color: #908CAA\">.</span><span style=\"color: #3E8FB0\">impl</span><span style=\"color: #908CAA\">;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #3E8FB0\">import com</span><span style=\"color: #908CAA\">.</span><span style=\"color: #3E8FB0\">anicaaz</span><span style=\"color: #908CAA\">.</span><span style=\"color: #3E8FB0\">springplayground</span><span style=\"color: #908CAA\">.</span><span style=\"color: #3E8FB0\">service</span><span style=\"color: #908CAA\">.</span><span style=\"color: #3E8FB0\">UserService</span><span style=\"color: #908CAA\">;</span></span>\n<span class=\"line\"><span style=\"color: #3E8FB0\">import org</span><span style=\"color: #908CAA\">.</span><span style=\"color: #3E8FB0\">myspringframework</span><span style=\"color: #908CAA\">.</span><span style=\"color: #3E8FB0\">annotation</span><span style=\"color: #908CAA\">.</span><span style=\"color: #3E8FB0\">Service</span><span style=\"color: #908CAA\">;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #908CAA\">@</span><span style=\"color: #3E8FB0\">Service</span></span>\n<span class=\"line\"><span style=\"color: #3E8FB0\">public</span><span style=\"color: #E0DEF4\"> </span><span style=\"color: #3E8FB0\">class</span><span style=\"color: #E0DEF4\"> </span><span style=\"color: #9CCFD8\">UserServiceImpl</span><span style=\"color: #E0DEF4\"> </span><span style=\"color: #3E8FB0\">implements</span><span style=\"color: #E0DEF4\"> </span><span style=\"color: #C4A7E7; font-style: italic\">UserService</span><span style=\"color: #E0DEF4\"> </span><span style=\"color: #908CAA\">&#123;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #E0DEF4\">    </span><span style=\"color: #908CAA\">@</span><span style=\"color: #3E8FB0\">Override</span></span>\n<span class=\"line\"><span style=\"color: #E0DEF4\">    </span><span style=\"color: #3E8FB0\">public</span><span style=\"color: #E0DEF4\"> </span><span style=\"color: #3E8FB0\">int</span><span style=\"color: #E0DEF4\"> </span><span style=\"color: #EA9A97\">add</span><span style=\"color: #908CAA\">()</span><span style=\"color: #E0DEF4\"> </span><span style=\"color: #908CAA\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #E0DEF4\">        </span><span style=\"color: #E0DEF4; font-style: italic\">System</span><span style=\"color: #908CAA\">.</span><span style=\"color: #E0DEF4; font-style: italic\">out</span><span style=\"color: #908CAA\">.</span><span style=\"color: #EA9A97\">println</span><span style=\"color: #908CAA\">(</span><span style=\"color: #F6C177\">&quot;UserService add&quot;</span><span style=\"color: #908CAA\">);</span></span>\n<span class=\"line\"><span style=\"color: #E0DEF4\">        </span><span style=\"color: #3E8FB0\">return</span><span style=\"color: #E0DEF4\"> </span><span style=\"color: #EA9A97\">0</span><span style=\"color: #908CAA\">;</span></span>\n<span class=\"line\"><span style=\"color: #E0DEF4\">    </span><span style=\"color: #908CAA\">&#125;</span></span>\n<span class=\"line\"><span style=\"color: #908CAA\">&#125;</span></span>\n<span class=\"line\"></span></code></pre></div><ul>\n<li>Controller</li>\n</ul>\n<div class=\"language-java\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">java</span><pre class=\"shiki rose-pine-moon\" style=\"background-color: #232136\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #3E8FB0\">package</span><span style=\"color: #E0DEF4\"> </span><span style=\"color: #3E8FB0\">com</span><span style=\"color: #908CAA\">.</span><span style=\"color: #3E8FB0\">anicaaz</span><span style=\"color: #908CAA\">.</span><span style=\"color: #3E8FB0\">springplayground</span><span style=\"color: #908CAA\">.</span><span style=\"color: #3E8FB0\">controller</span><span style=\"color: #908CAA\">;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #3E8FB0\">import com</span><span style=\"color: #908CAA\">.</span><span style=\"color: #3E8FB0\">anicaaz</span><span style=\"color: #908CAA\">.</span><span style=\"color: #3E8FB0\">springplayground</span><span style=\"color: #908CAA\">.</span><span style=\"color: #3E8FB0\">service</span><span style=\"color: #908CAA\">.</span><span style=\"color: #3E8FB0\">UserService</span><span style=\"color: #908CAA\">;</span></span>\n<span class=\"line\"><span style=\"color: #3E8FB0\">import org</span><span style=\"color: #908CAA\">.</span><span style=\"color: #3E8FB0\">myspringframework</span><span style=\"color: #908CAA\">.</span><span style=\"color: #3E8FB0\">annotation</span><span style=\"color: #908CAA\">.</span><span style=\"color: #3E8FB0\">Autowire</span><span style=\"color: #908CAA\">;</span></span>\n<span class=\"line\"><span style=\"color: #3E8FB0\">import org</span><span style=\"color: #908CAA\">.</span><span style=\"color: #3E8FB0\">myspringframework</span><span style=\"color: #908CAA\">.</span><span style=\"color: #3E8FB0\">annotation</span><span style=\"color: #908CAA\">.</span><span style=\"color: #3E8FB0\">Controller</span><span style=\"color: #908CAA\">;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #908CAA\">@</span><span style=\"color: #3E8FB0\">Controller</span></span>\n<span class=\"line\"><span style=\"color: #3E8FB0\">public</span><span style=\"color: #E0DEF4\"> </span><span style=\"color: #3E8FB0\">class</span><span style=\"color: #E0DEF4\"> </span><span style=\"color: #9CCFD8\">UserController</span><span style=\"color: #E0DEF4\"> </span><span style=\"color: #908CAA\">&#123;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #E0DEF4\">    </span><span style=\"color: #908CAA\">@</span><span style=\"color: #3E8FB0\">Autowire</span></span>\n<span class=\"line\"><span style=\"color: #E0DEF4\">    </span><span style=\"color: #3E8FB0\">UserService</span><span style=\"color: #E0DEF4\"> </span><span style=\"color: #E0DEF4; font-style: italic\">userService</span><span style=\"color: #908CAA\">;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #E0DEF4\">    </span><span style=\"color: #3E8FB0\">public</span><span style=\"color: #E0DEF4\"> </span><span style=\"color: #3E8FB0\">void</span><span style=\"color: #E0DEF4\"> </span><span style=\"color: #EA9A97\">serviceMethod</span><span style=\"color: #908CAA\">()</span><span style=\"color: #E0DEF4\"> </span><span style=\"color: #908CAA\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #E0DEF4\">        </span><span style=\"color: #E0DEF4; font-style: italic\">userService</span><span style=\"color: #908CAA\">.</span><span style=\"color: #EA9A97\">add</span><span style=\"color: #908CAA\">();</span></span>\n<span class=\"line\"><span style=\"color: #E0DEF4\">    </span><span style=\"color: #908CAA\">&#125;</span></span>\n<span class=\"line\"><span style=\"color: #908CAA\">&#125;</span></span>\n<span class=\"line\"></span></code></pre></div><h2 id=\"3-手写-SpringConfigParser\"><a href=\"#3-手写-SpringConfigParser\" class=\"headerlink\" title=\"3. 手写 SpringConfigParser\"></a>3. 手写 SpringConfigParser</h2><blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>在传统 Spring 项目中， 我们需要将 需要被扫描 的包，申明在 applicationContext.xml 文件中。</p></blockquote>\n<p>最简格式如下（不考虑 Spring Schema）</p>\n<div class=\"language-xml\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">xml</span><pre class=\"shiki rose-pine-moon\" style=\"background-color: #232136\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #6E6A86\">&lt;?</span><span style=\"color: #9CCFD8\">xml</span><span style=\"color: #C4A7E7; font-style: italic\"> version</span><span style=\"color: #E0DEF4\">=</span><span style=\"color: #F6C177\">&quot;1.0&quot;</span><span style=\"color: #C4A7E7; font-style: italic\"> encoding</span><span style=\"color: #E0DEF4\">=</span><span style=\"color: #F6C177\">&quot;utf-8&quot;</span><span style=\"color: #E0DEF4\"> </span><span style=\"color: #6E6A86\">?&gt;</span></span>\n<span class=\"line\"><span style=\"color: #6E6A86\">&lt;</span><span style=\"color: #9CCFD8\">beans</span><span style=\"color: #6E6A86\">&gt;</span></span>\n<span class=\"line\"><span style=\"color: #E0DEF4\">    </span><span style=\"color: #6E6A86\">&lt;</span><span style=\"color: #9CCFD8\">component-scan</span><span style=\"color: #E0DEF4\"> </span><span style=\"color: #C4A7E7; font-style: italic\">base-package</span><span style=\"color: #E0DEF4\">=</span><span style=\"color: #F6C177\">&quot;com.anicaaz&quot;</span><span style=\"color: #6E6A86\">&gt;&lt;/</span><span style=\"color: #9CCFD8\">component-scan</span><span style=\"color: #6E6A86\">&gt;</span></span>\n<span class=\"line\"><span style=\"color: #6E6A86\">&lt;/</span><span style=\"color: #9CCFD8\">beans</span><span style=\"color: #6E6A86\">&gt;</span></span></code></pre></div><p>我们需要解析 base-package的值， 来获取 需要被扫描 的包的名字。</p>\n<ul>\n<li>org.myspringframework.parser.SpringConfigParser.java</li>\n</ul>\n<div class=\"language-java\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">java</span><pre class=\"shiki rose-pine-moon\" style=\"background-color: #232136\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #3E8FB0\">package</span><span style=\"color: #E0DEF4\"> </span><span style=\"color: #3E8FB0\">org</span><span style=\"color: #908CAA\">.</span><span style=\"color: #3E8FB0\">myspringframework</span><span style=\"color: #908CAA\">.</span><span style=\"color: #3E8FB0\">parser</span><span style=\"color: #908CAA\">;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #3E8FB0\">import org</span><span style=\"color: #908CAA\">.</span><span style=\"color: #3E8FB0\">dom4j</span><span style=\"color: #908CAA\">.</span><span style=\"color: #3E8FB0\">Attribute</span><span style=\"color: #908CAA\">;</span></span>\n<span class=\"line\"><span style=\"color: #3E8FB0\">import org</span><span style=\"color: #908CAA\">.</span><span style=\"color: #3E8FB0\">dom4j</span><span style=\"color: #908CAA\">.</span><span style=\"color: #3E8FB0\">Document</span><span style=\"color: #908CAA\">;</span></span>\n<span class=\"line\"><span style=\"color: #3E8FB0\">import org</span><span style=\"color: #908CAA\">.</span><span style=\"color: #3E8FB0\">dom4j</span><span style=\"color: #908CAA\">.</span><span style=\"color: #3E8FB0\">DocumentException</span><span style=\"color: #908CAA\">;</span></span>\n<span class=\"line\"><span style=\"color: #3E8FB0\">import org</span><span style=\"color: #908CAA\">.</span><span style=\"color: #3E8FB0\">dom4j</span><span style=\"color: #908CAA\">.</span><span style=\"color: #3E8FB0\">Element</span><span style=\"color: #908CAA\">;</span></span>\n<span class=\"line\"><span style=\"color: #3E8FB0\">import org</span><span style=\"color: #908CAA\">.</span><span style=\"color: #3E8FB0\">dom4j</span><span style=\"color: #908CAA\">.</span><span style=\"color: #3E8FB0\">io</span><span style=\"color: #908CAA\">.</span><span style=\"color: #3E8FB0\">SAXReader</span><span style=\"color: #908CAA\">;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #3E8FB0\">import javax</span><span style=\"color: #908CAA\">.</span><span style=\"color: #3E8FB0\">swing</span><span style=\"color: #908CAA\">.</span><span style=\"color: #E0DEF4; font-style: italic\">*</span><span style=\"color: #908CAA\">;</span></span>\n<span class=\"line\"><span style=\"color: #3E8FB0\">import java</span><span style=\"color: #908CAA\">.</span><span style=\"color: #3E8FB0\">io</span><span style=\"color: #908CAA\">.</span><span style=\"color: #3E8FB0\">IOException</span><span style=\"color: #908CAA\">;</span></span>\n<span class=\"line\"><span style=\"color: #3E8FB0\">import java</span><span style=\"color: #908CAA\">.</span><span style=\"color: #3E8FB0\">io</span><span style=\"color: #908CAA\">.</span><span style=\"color: #3E8FB0\">InputStream</span><span style=\"color: #908CAA\">;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #908CAA; font-style: italic\">/**</span></span>\n<span class=\"line\"><span style=\"color: #6E6A86; font-style: italic\"> * 负责解析 Spring 配置文件</span></span>\n<span class=\"line\"><span style=\"color: #6E6A86; font-style: italic\"> </span><span style=\"color: #908CAA; font-style: italic\">*/</span></span>\n<span class=\"line\"><span style=\"color: #3E8FB0\">public</span><span style=\"color: #E0DEF4\"> </span><span style=\"color: #3E8FB0\">class</span><span style=\"color: #E0DEF4\"> </span><span style=\"color: #9CCFD8\">SpringConfigParser</span><span style=\"color: #E0DEF4\"> </span><span style=\"color: #908CAA\">&#123;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #6E6A86; font-style: italic\">    </span><span style=\"color: #908CAA; font-style: italic\">/**</span></span>\n<span class=\"line\"><span style=\"color: #6E6A86; font-style: italic\">     * 获取 要扫描的包 的路径</span></span>\n<span class=\"line\"><span style=\"color: #6E6A86; font-style: italic\">     *</span></span>\n<span class=\"line\"><span style=\"color: #6E6A86; font-style: italic\">     * </span><span style=\"color: #3E8FB0; font-style: italic\">@return</span><span style=\"color: #6E6A86; font-style: italic\"> 路径</span></span>\n<span class=\"line\"><span style=\"color: #6E6A86; font-style: italic\">     </span><span style=\"color: #908CAA; font-style: italic\">*/</span></span>\n<span class=\"line\"><span style=\"color: #E0DEF4\">    </span><span style=\"color: #3E8FB0\">public</span><span style=\"color: #E0DEF4\"> </span><span style=\"color: #3E8FB0\">static</span><span style=\"color: #E0DEF4\"> </span><span style=\"color: #3E8FB0\">String</span><span style=\"color: #E0DEF4\"> </span><span style=\"color: #EA9A97\">getComponentScanPackage</span><span style=\"color: #908CAA\">(</span><span style=\"color: #3E8FB0\">String</span><span style=\"color: #E0DEF4\"> </span><span style=\"color: #C4A7E7; font-style: italic\">springConfig</span><span style=\"color: #908CAA\">)</span><span style=\"color: #E0DEF4\"> </span><span style=\"color: #908CAA\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #908CAA\">        </span><span style=\"color: #908CAA; font-style: italic\">//</span><span style=\"color: #6E6A86; font-style: italic\"> 使用DOM4J解析配置文件, SAXReader解析器</span></span>\n<span class=\"line\"><span style=\"color: #E0DEF4\">        </span><span style=\"color: #3E8FB0\">SAXReader</span><span style=\"color: #E0DEF4\"> </span><span style=\"color: #E0DEF4; font-style: italic\">saxReader</span><span style=\"color: #E0DEF4\"> </span><span style=\"color: #3E8FB0\">=</span><span style=\"color: #E0DEF4\"> </span><span style=\"color: #3E8FB0\">new</span><span style=\"color: #E0DEF4\"> </span><span style=\"color: #EA9A97\">SAXReader</span><span style=\"color: #908CAA\">();</span></span>\n<span class=\"line\"><span style=\"color: #E0DEF4\">        </span><span style=\"color: #3E8FB0\">InputStream</span><span style=\"color: #E0DEF4\"> </span><span style=\"color: #E0DEF4; font-style: italic\">inputStream</span><span style=\"color: #E0DEF4\"> </span><span style=\"color: #3E8FB0\">=</span><span style=\"color: #E0DEF4\"> </span><span style=\"color: #EA9A97\">null</span><span style=\"color: #908CAA\">;</span></span>\n<span class=\"line\"><span style=\"color: #E0DEF4\">        </span><span style=\"color: #3E8FB0\">try</span><span style=\"color: #E0DEF4\"> </span><span style=\"color: #908CAA\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #908CAA\">            </span><span style=\"color: #908CAA; font-style: italic\">//</span><span style=\"color: #6E6A86; font-style: italic\"> 通过 输入流， 通过 SpringConfigParser 的 类加载器，获取 applicationContext 的项目路径</span></span>\n<span class=\"line\"><span style=\"color: #E0DEF4\">            inputStream </span><span style=\"color: #3E8FB0\">=</span><span style=\"color: #E0DEF4\"> </span><span style=\"color: #E0DEF4; font-style: italic\">SpringConfigParser</span><span style=\"color: #908CAA\">.</span><span style=\"color: #E0DEF4; font-style: italic\">class</span><span style=\"color: #908CAA\">.</span><span style=\"color: #EA9A97\">getClassLoader</span><span style=\"color: #908CAA\">().</span><span style=\"color: #EA9A97\">getResourceAsStream</span><span style=\"color: #908CAA\">(</span><span style=\"color: #E0DEF4\">springConfig</span><span style=\"color: #908CAA\">);</span></span>\n<span class=\"line\"><span style=\"color: #908CAA\">            </span><span style=\"color: #908CAA; font-style: italic\">//</span><span style=\"color: #6E6A86; font-style: italic\"> 读取该 xml文件</span></span>\n<span class=\"line\"><span style=\"color: #E0DEF4\">            </span><span style=\"color: #3E8FB0\">Document</span><span style=\"color: #E0DEF4\"> </span><span style=\"color: #E0DEF4; font-style: italic\">document</span><span style=\"color: #E0DEF4\"> </span><span style=\"color: #3E8FB0\">=</span><span style=\"color: #E0DEF4\"> </span><span style=\"color: #E0DEF4; font-style: italic\">saxReader</span><span style=\"color: #908CAA\">.</span><span style=\"color: #EA9A97\">read</span><span style=\"color: #908CAA\">(</span><span style=\"color: #E0DEF4\">inputStream</span><span style=\"color: #908CAA\">);</span></span>\n<span class=\"line\"><span style=\"color: #908CAA\">            </span><span style=\"color: #908CAA; font-style: italic\">//</span><span style=\"color: #6E6A86; font-style: italic\"> 获取到 xml文件 的根节点</span></span>\n<span class=\"line\"><span style=\"color: #E0DEF4\">            </span><span style=\"color: #3E8FB0\">Element</span><span style=\"color: #E0DEF4\"> </span><span style=\"color: #E0DEF4; font-style: italic\">rootElement</span><span style=\"color: #E0DEF4\"> </span><span style=\"color: #3E8FB0\">=</span><span style=\"color: #E0DEF4\"> </span><span style=\"color: #E0DEF4; font-style: italic\">document</span><span style=\"color: #908CAA\">.</span><span style=\"color: #EA9A97\">getRootElement</span><span style=\"color: #908CAA\">();</span></span>\n<span class=\"line\"><span style=\"color: #908CAA\">            </span><span style=\"color: #908CAA; font-style: italic\">//</span><span style=\"color: #6E6A86; font-style: italic\"> 找到 component-scan 标签</span></span>\n<span class=\"line\"><span style=\"color: #E0DEF4\">            </span><span style=\"color: #3E8FB0\">Element</span><span style=\"color: #E0DEF4\"> </span><span style=\"color: #E0DEF4; font-style: italic\">element</span><span style=\"color: #E0DEF4\"> </span><span style=\"color: #3E8FB0\">=</span><span style=\"color: #E0DEF4\"> </span><span style=\"color: #E0DEF4; font-style: italic\">rootElement</span><span style=\"color: #908CAA\">.</span><span style=\"color: #EA9A97\">element</span><span style=\"color: #908CAA\">(</span><span style=\"color: #F6C177\">&quot;component-scan&quot;</span><span style=\"color: #908CAA\">);</span></span>\n<span class=\"line\"><span style=\"color: #908CAA\">            </span><span style=\"color: #908CAA; font-style: italic\">//</span><span style=\"color: #6E6A86; font-style: italic\"> 获取 base package 所对应的 属性对象</span></span>\n<span class=\"line\"><span style=\"color: #E0DEF4\">            </span><span style=\"color: #3E8FB0\">Attribute</span><span style=\"color: #E0DEF4\"> </span><span style=\"color: #E0DEF4; font-style: italic\">attribute</span><span style=\"color: #E0DEF4\"> </span><span style=\"color: #3E8FB0\">=</span><span style=\"color: #E0DEF4\"> </span><span style=\"color: #E0DEF4; font-style: italic\">element</span><span style=\"color: #908CAA\">.</span><span style=\"color: #EA9A97\">attribute</span><span style=\"color: #908CAA\">(</span><span style=\"color: #F6C177\">&quot;base-package&quot;</span><span style=\"color: #908CAA\">);</span></span>\n<span class=\"line\"><span style=\"color: #908CAA\">            </span><span style=\"color: #908CAA; font-style: italic\">//</span><span style=\"color: #6E6A86; font-style: italic\"> 通过 属性对象， 拿到 String 类型的值</span></span>\n<span class=\"line\"><span style=\"color: #E0DEF4\">            </span><span style=\"color: #3E8FB0\">return</span><span style=\"color: #E0DEF4\"> </span><span style=\"color: #E0DEF4; font-style: italic\">attribute</span><span style=\"color: #908CAA\">.</span><span style=\"color: #EA9A97\">getValue</span><span style=\"color: #908CAA\">();</span></span>\n<span class=\"line\"><span style=\"color: #E0DEF4\">        </span><span style=\"color: #908CAA\">&#125;</span><span style=\"color: #E0DEF4\"> </span><span style=\"color: #3E8FB0\">catch</span><span style=\"color: #E0DEF4\"> </span><span style=\"color: #908CAA\">(</span><span style=\"color: #3E8FB0\">DocumentException</span><span style=\"color: #E0DEF4\"> </span><span style=\"color: #C4A7E7; font-style: italic\">e</span><span style=\"color: #908CAA\">)</span><span style=\"color: #E0DEF4\"> </span><span style=\"color: #908CAA\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #E0DEF4\">            </span><span style=\"color: #3E8FB0\">throw</span><span style=\"color: #E0DEF4\"> </span><span style=\"color: #3E8FB0\">new</span><span style=\"color: #E0DEF4\"> </span><span style=\"color: #EA9A97\">RuntimeException</span><span style=\"color: #908CAA\">(</span><span style=\"color: #E0DEF4\">e</span><span style=\"color: #908CAA\">);</span></span>\n<span class=\"line\"><span style=\"color: #E0DEF4\">        </span><span style=\"color: #908CAA\">&#125;</span><span style=\"color: #E0DEF4\"> </span><span style=\"color: #3E8FB0\">finally</span><span style=\"color: #E0DEF4\"> </span><span style=\"color: #908CAA\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #E0DEF4\">            </span><span style=\"color: #3E8FB0\">if</span><span style=\"color: #E0DEF4\"> </span><span style=\"color: #908CAA\">(</span><span style=\"color: #E0DEF4\">inputStream </span><span style=\"color: #3E8FB0\">!=</span><span style=\"color: #E0DEF4\"> </span><span style=\"color: #EA9A97\">null</span><span style=\"color: #908CAA\">)</span><span style=\"color: #E0DEF4\"> </span><span style=\"color: #908CAA\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #E0DEF4\">                </span><span style=\"color: #3E8FB0\">try</span><span style=\"color: #E0DEF4\"> </span><span style=\"color: #908CAA\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #E0DEF4\">                    </span><span style=\"color: #E0DEF4; font-style: italic\">inputStream</span><span style=\"color: #908CAA\">.</span><span style=\"color: #EA9A97\">close</span><span style=\"color: #908CAA\">();</span></span>\n<span class=\"line\"><span style=\"color: #E0DEF4\">                </span><span style=\"color: #908CAA\">&#125;</span><span style=\"color: #E0DEF4\"> </span><span style=\"color: #3E8FB0\">catch</span><span style=\"color: #E0DEF4\"> </span><span style=\"color: #908CAA\">(</span><span style=\"color: #3E8FB0\">IOException</span><span style=\"color: #E0DEF4\"> </span><span style=\"color: #C4A7E7; font-style: italic\">e</span><span style=\"color: #908CAA\">)</span><span style=\"color: #E0DEF4\"> </span><span style=\"color: #908CAA\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #E0DEF4\">                    </span><span style=\"color: #3E8FB0\">throw</span><span style=\"color: #E0DEF4\"> </span><span style=\"color: #3E8FB0\">new</span><span style=\"color: #E0DEF4\"> </span><span style=\"color: #EA9A97\">RuntimeException</span><span style=\"color: #908CAA\">(</span><span style=\"color: #E0DEF4\">e</span><span style=\"color: #908CAA\">);</span></span>\n<span class=\"line\"><span style=\"color: #E0DEF4\">                </span><span style=\"color: #908CAA\">&#125;</span></span>\n<span class=\"line\"><span style=\"color: #E0DEF4\">            </span><span style=\"color: #908CAA\">&#125;</span></span>\n<span class=\"line\"><span style=\"color: #E0DEF4\">        </span><span style=\"color: #908CAA\">&#125;</span></span>\n<span class=\"line\"><span style=\"color: #E0DEF4\">    </span><span style=\"color: #908CAA\">&#125;</span></span>\n<span class=\"line\"><span style=\"color: #908CAA\">&#125;</span></span></code></pre></div><h3 id=\"3-1-模拟启动类\"><a href=\"#3-1-模拟启动类\" class=\"headerlink\" title=\"3.1 模拟启动类\"></a>3.1 模拟启动类</h3><p>之所以可以直接写 “application.xml”，是因为在编译后，application.xml直接处于项目的根目录下面。</p>\n<p><img src=\"/../img/image-20240412231030134.png\" alt=\"image-20240412231030134\"></p>\n<div class=\"language-java\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">java</span><pre class=\"shiki rose-pine-moon\" style=\"background-color: #232136\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #3E8FB0\">package</span><span style=\"color: #E0DEF4\"> </span><span style=\"color: #3E8FB0\">com</span><span style=\"color: #908CAA\">.</span><span style=\"color: #3E8FB0\">anicaaz</span><span style=\"color: #908CAA\">.</span><span style=\"color: #3E8FB0\">test</span><span style=\"color: #908CAA\">;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #3E8FB0\">import org</span><span style=\"color: #908CAA\">.</span><span style=\"color: #3E8FB0\">myspringframework</span><span style=\"color: #908CAA\">.</span><span style=\"color: #3E8FB0\">factory</span><span style=\"color: #908CAA\">.</span><span style=\"color: #3E8FB0\">ClassPathXmlApplicationContext</span><span style=\"color: #908CAA\">;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #3E8FB0\">public</span><span style=\"color: #E0DEF4\"> </span><span style=\"color: #3E8FB0\">class</span><span style=\"color: #E0DEF4\"> </span><span style=\"color: #9CCFD8\">Test</span><span style=\"color: #E0DEF4\"> </span><span style=\"color: #908CAA\">&#123;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #E0DEF4\">    </span><span style=\"color: #908CAA\">@</span><span style=\"color: #3E8FB0\">org</span><span style=\"color: #908CAA\">.</span><span style=\"color: #E0DEF4; font-style: italic\">junit</span><span style=\"color: #908CAA\">.</span><span style=\"color: #E0DEF4; font-style: italic\">jupiter</span><span style=\"color: #908CAA\">.</span><span style=\"color: #E0DEF4; font-style: italic\">api</span><span style=\"color: #908CAA\">.</span><span style=\"color: #E0DEF4; font-style: italic\">Test</span></span>\n<span class=\"line\"><span style=\"color: #E0DEF4\">    </span><span style=\"color: #3E8FB0\">public</span><span style=\"color: #E0DEF4\"> </span><span style=\"color: #3E8FB0\">void</span><span style=\"color: #E0DEF4\"> </span><span style=\"color: #EA9A97\">test</span><span style=\"color: #908CAA\">()</span><span style=\"color: #E0DEF4\"> </span><span style=\"color: #908CAA\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #E0DEF4\">        </span><span style=\"color: #3E8FB0\">ClassPathXmlApplicationContext</span><span style=\"color: #E0DEF4\"> </span><span style=\"color: #E0DEF4; font-style: italic\">classPathXmlApplicationContext</span><span style=\"color: #E0DEF4\"> </span><span style=\"color: #3E8FB0\">=</span><span style=\"color: #E0DEF4\"> </span><span style=\"color: #3E8FB0\">new</span><span style=\"color: #E0DEF4\"> </span><span style=\"color: #EA9A97\">ClassPathXmlApplicationContext</span><span style=\"color: #908CAA\">(</span><span style=\"color: #F6C177\">&quot;applicationContext.xml&quot;</span><span style=\"color: #908CAA\">);</span></span>\n<span class=\"line\"><span style=\"color: #E0DEF4\">    </span><span style=\"color: #908CAA\">&#125;</span></span>\n<span class=\"line\"><span style=\"color: #908CAA\">&#125;</span></span>\n<span class=\"line\"></span></code></pre></div><h2 id=\"4-手写-ClassPathXmlApplicationContext\"><a href=\"#4-手写-ClassPathXmlApplicationContext\" class=\"headerlink\" title=\"4. 手写 ClassPathXmlApplicatio\tnContext\"></a>4. 手写 ClassPathXmlApplicatio\tnContext</h2><h3 id=\"4-1-构造方法-和-成员变量\"><a href=\"#4-1-构造方法-和-成员变量\" class=\"headerlink\" title=\"4.1 构造方法 和 成员变量\"></a>4.1 构造方法 和 成员变量</h3><div class=\"language-java\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">java</span><pre class=\"shiki rose-pine-moon\" style=\"background-color: #232136\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #908CAA\">    </span><span style=\"color: #908CAA; font-style: italic\">//</span><span style=\"color: #6E6A86; font-style: italic\">成员变量</span></span>\n<span class=\"line\"><span style=\"color: #E0DEF4\">    </span><span style=\"color: #3E8FB0\">private</span><span style=\"color: #E0DEF4\"> </span><span style=\"color: #3E8FB0\">String</span><span style=\"color: #E0DEF4\"> </span><span style=\"color: #E0DEF4; font-style: italic\">springConfig</span><span style=\"color: #908CAA\">;</span><span style=\"color: #E0DEF4\"> </span><span style=\"color: #908CAA; font-style: italic\">//</span><span style=\"color: #6E6A86; font-style: italic\"> resource包下， xml的文件名， 默认是 &quot;applicationContext.xml&quot;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #6E6A86; font-style: italic\">    </span><span style=\"color: #908CAA; font-style: italic\">/**</span></span>\n<span class=\"line\"><span style=\"color: #6E6A86; font-style: italic\">     * 构造方法</span></span>\n<span class=\"line\"><span style=\"color: #6E6A86; font-style: italic\">     *</span></span>\n<span class=\"line\"><span style=\"color: #6E6A86; font-style: italic\">     * </span><span style=\"color: #3E8FB0; font-style: italic\">@param</span><span style=\"color: #6E6A86; font-style: italic\"> </span><span style=\"color: #C4A7E7; font-style: italic\">springConfig</span><span style=\"color: #6E6A86; font-style: italic\"> application.xml 路径</span></span>\n<span class=\"line\"><span style=\"color: #6E6A86; font-style: italic\">     </span><span style=\"color: #908CAA; font-style: italic\">*/</span></span>\n<span class=\"line\"><span style=\"color: #E0DEF4\">    </span><span style=\"color: #3E8FB0\">public</span><span style=\"color: #E0DEF4\"> </span><span style=\"color: #EA9A97\">ClassPathXmlApplicationContext</span><span style=\"color: #908CAA\">(</span><span style=\"color: #3E8FB0\">String</span><span style=\"color: #E0DEF4\"> springConfig</span><span style=\"color: #908CAA\">)</span><span style=\"color: #E0DEF4\"> </span><span style=\"color: #908CAA\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #E0DEF4\">        </span><span style=\"color: #E0DEF4; font-style: italic\">this</span><span style=\"color: #908CAA\">.</span><span style=\"color: #E0DEF4; font-style: italic\">springConfig</span><span style=\"color: #E0DEF4\"> </span><span style=\"color: #3E8FB0\">=</span><span style=\"color: #E0DEF4\"> springConfig</span><span style=\"color: #908CAA\">;</span></span>\n<span class=\"line\"><span style=\"color: #E0DEF4\">        </span><span style=\"color: #EA9A97\">init</span><span style=\"color: #908CAA\">();</span></span>\n<span class=\"line\"><span style=\"color: #E0DEF4\">    </span><span style=\"color: #908CAA\">&#125;</span></span></code></pre></div><h3 id=\"4-2-初始化-IoC容器\"><a href=\"#4-2-初始化-IoC容器\" class=\"headerlink\" title=\"4.2 初始化 IoC容器\"></a>4.2 初始化 IoC容器</h3><div class=\"language-java\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">java</span><pre class=\"shiki rose-pine-moon\" style=\"background-color: #232136\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #6E6A86; font-style: italic\">    </span><span style=\"color: #908CAA; font-style: italic\">/**</span></span>\n<span class=\"line\"><span style=\"color: #6E6A86; font-style: italic\">     * 初始化 Spring IoC容器</span></span>\n<span class=\"line\"><span style=\"color: #6E6A86; font-style: italic\">     </span><span style=\"color: #908CAA; font-style: italic\">*/</span></span>\n<span class=\"line\"><span style=\"color: #E0DEF4\">    </span><span style=\"color: #3E8FB0\">private</span><span style=\"color: #E0DEF4\"> </span><span style=\"color: #3E8FB0\">void</span><span style=\"color: #E0DEF4\"> </span><span style=\"color: #EA9A97\">init</span><span style=\"color: #908CAA\">()</span><span style=\"color: #E0DEF4\"> </span><span style=\"color: #908CAA\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #908CAA\">        </span><span style=\"color: #908CAA; font-style: italic\">//</span><span style=\"color: #6E6A86; font-style: italic\">1. 调用 XML 解析方法， 解析 applicationContext.xml， 获取到要扫描的包。</span></span>\n<span class=\"line\"><span style=\"color: #E0DEF4\">        </span><span style=\"color: #3E8FB0\">String</span><span style=\"color: #E0DEF4\"> </span><span style=\"color: #E0DEF4; font-style: italic\">componentScanPackage</span><span style=\"color: #E0DEF4\"> </span><span style=\"color: #3E8FB0\">=</span><span style=\"color: #E0DEF4\"> </span><span style=\"color: #E0DEF4; font-style: italic\">SpringConfigParser</span><span style=\"color: #908CAA\">.</span><span style=\"color: #EA9A97\">getComponentScanPackage</span><span style=\"color: #908CAA\">(</span><span style=\"color: #E0DEF4\">springConfig</span><span style=\"color: #908CAA\">);</span></span>\n<span class=\"line\"><span style=\"color: #E0DEF4\">        </span><span style=\"color: #E0DEF4; font-style: italic\">System</span><span style=\"color: #908CAA\">.</span><span style=\"color: #E0DEF4; font-style: italic\">out</span><span style=\"color: #908CAA\">.</span><span style=\"color: #EA9A97\">println</span><span style=\"color: #908CAA\">(</span><span style=\"color: #F6C177\">&quot;The package path that is parsed: &quot;</span><span style=\"color: #E0DEF4\"> </span><span style=\"color: #3E8FB0\">+</span><span style=\"color: #E0DEF4\"> componentScanPackage</span><span style=\"color: #908CAA\">);</span></span>\n<span class=\"line\"><span style=\"color: #908CAA\">        </span><span style=\"color: #908CAA; font-style: italic\">//</span><span style=\"color: #6E6A86; font-style: italic\">2. 扫描这个包下面 所有的类。</span></span>\n<span class=\"line\"><span style=\"color: #E0DEF4\">        </span><span style=\"color: #EA9A97\">loadClasses</span><span style=\"color: #908CAA\">(</span><span style=\"color: #E0DEF4\">componentScanPackage</span><span style=\"color: #908CAA\">);</span></span>\n<span class=\"line\"><span style=\"color: #E0DEF4\">    </span><span style=\"color: #908CAA\">&#125;</span></span></code></pre></div><h3 id=\"4-3-获取-需要被扫描的包-的路径\"><a href=\"#4-3-获取-需要被扫描的包-的路径\" class=\"headerlink\" title=\"4.3 获取 需要被扫描的包 的路径\"></a>4.3 获取 需要被扫描的包 的路径</h3><p><img src=\"/../img/image-20240412223956771.png\" alt=\"image-20240412223956771\"></p>\n<div class=\"language-java\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">java</span><pre class=\"shiki rose-pine-moon\" style=\"background-color: #232136\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #6E6A86; font-style: italic\">        </span><span style=\"color: #908CAA; font-style: italic\">/**</span></span>\n<span class=\"line\"><span style=\"color: #6E6A86; font-style: italic\">     * 加载扫描包下的所有的类 com.anicaaz</span></span>\n<span class=\"line\"><span style=\"color: #6E6A86; font-style: italic\">     * 注意 这里是 类， 而不是.java 结尾的 文件。</span></span>\n<span class=\"line\"><span style=\"color: #6E6A86; font-style: italic\">     * 也就是说， 我们扫描的其实是 target 下面的那个 classes。</span></span>\n<span class=\"line\"><span style=\"color: #6E6A86; font-style: italic\">     </span><span style=\"color: #908CAA; font-style: italic\">*/</span></span>\n<span class=\"line\"><span style=\"color: #E0DEF4\">    </span><span style=\"color: #3E8FB0\">private</span><span style=\"color: #E0DEF4\"> </span><span style=\"color: #3E8FB0\">void</span><span style=\"color: #E0DEF4\"> </span><span style=\"color: #EA9A97\">loadClasses</span><span style=\"color: #908CAA\">(</span><span style=\"color: #3E8FB0\">String</span><span style=\"color: #E0DEF4\"> componentScanPackage</span><span style=\"color: #908CAA\">)</span><span style=\"color: #E0DEF4\"> </span><span style=\"color: #908CAA\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #908CAA\">        </span><span style=\"color: #908CAA; font-style: italic\">//</span><span style=\"color: #6E6A86; font-style: italic\"> System.out.println(resource); 当前是在test-classes下， 我们想要的是classes下的类 //file:/home/anicaa/%e6%96%87%e6%a1%a3/backup-blog/blog/source/code/Java/backend-learning/my-spring/target/test-classes/</span></span>\n<span class=\"line\"><span style=\"color: #908CAA\">        </span><span style=\"color: #908CAA; font-style: italic\">//</span><span style=\"color: #6E6A86; font-style: italic\"> 1. 将 com.anicaaz 的 . 替换成 /。 即 com/anicaaz</span></span>\n<span class=\"line\"><span style=\"color: #E0DEF4\">        componentScanPackage </span><span style=\"color: #3E8FB0\">=</span><span style=\"color: #E0DEF4\"> </span><span style=\"color: #E0DEF4; font-style: italic\">componentScanPackage</span><span style=\"color: #908CAA\">.</span><span style=\"color: #EA9A97\">replace</span><span style=\"color: #908CAA\">(</span><span style=\"color: #F6C177\">&quot;.&quot;</span><span style=\"color: #908CAA\">,</span><span style=\"color: #E0DEF4\"> </span><span style=\"color: #F6C177\">&quot;/&quot;</span><span style=\"color: #908CAA\">);</span></span>\n<span class=\"line\"><span style=\"color: #E0DEF4\">        </span><span style=\"color: #E0DEF4; font-style: italic\">System</span><span style=\"color: #908CAA\">.</span><span style=\"color: #E0DEF4; font-style: italic\">out</span><span style=\"color: #908CAA\">.</span><span style=\"color: #EA9A97\">println</span><span style=\"color: #908CAA\">(</span><span style=\"color: #F6C177\">&quot;New componentScanPackageName: &quot;</span><span style=\"color: #E0DEF4\"> </span><span style=\"color: #3E8FB0\">+</span><span style=\"color: #E0DEF4\"> componentScanPackage</span><span style=\"color: #908CAA\">);</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #908CAA\">        </span><span style=\"color: #908CAA; font-style: italic\">//</span><span style=\"color: #6E6A86; font-style: italic\"> 构建 target/classes/目录的绝对路径， 并将 步骤1的结果，拼接上去</span></span>\n<span class=\"line\"><span style=\"color: #908CAA\">        </span><span style=\"color: #908CAA; font-style: italic\">//</span><span style=\"color: #6E6A86; font-style: italic\"> 2. 去掉 当前路径的 file:/,  变成 classPath 类路径， 或绝对路径。 注意linux 是去掉 file:, 需要保留 /</span></span>\n<span class=\"line\"><span style=\"color: #E0DEF4\">        </span><span style=\"color: #3E8FB0\">URL</span><span style=\"color: #E0DEF4\"> </span><span style=\"color: #E0DEF4; font-style: italic\">resource</span><span style=\"color: #E0DEF4\"> </span><span style=\"color: #3E8FB0\">=</span><span style=\"color: #E0DEF4\"> </span><span style=\"color: #E0DEF4; font-style: italic\">Thread</span><span style=\"color: #908CAA\">.</span><span style=\"color: #EA9A97\">currentThread</span><span style=\"color: #908CAA\">().</span><span style=\"color: #EA9A97\">getContextClassLoader</span><span style=\"color: #908CAA\">().</span><span style=\"color: #EA9A97\">getResource</span><span style=\"color: #908CAA\">(</span><span style=\"color: #F6C177\">&quot;&quot;</span><span style=\"color: #908CAA\">);</span></span>\n<span class=\"line\"><span style=\"color: #E0DEF4\">        </span><span style=\"color: #3E8FB0\">String</span><span style=\"color: #E0DEF4\"> </span><span style=\"color: #E0DEF4; font-style: italic\">urlString</span><span style=\"color: #E0DEF4\"> </span><span style=\"color: #3E8FB0\">=</span><span style=\"color: #E0DEF4\"> </span><span style=\"color: #E0DEF4; font-style: italic\">resource</span><span style=\"color: #908CAA\">.</span><span style=\"color: #EA9A97\">toString</span><span style=\"color: #908CAA\">();</span></span>\n<span class=\"line\"><span style=\"color: #908CAA\">        </span><span style=\"color: #908CAA; font-style: italic\">//</span><span style=\"color: #6E6A86; font-style: italic\"> 2.1 我的机器是包含中文路径的，所以要转成utf-8</span></span>\n<span class=\"line\"><span style=\"color: #E0DEF4\">        </span><span style=\"color: #3E8FB0\">try</span><span style=\"color: #E0DEF4\"> </span><span style=\"color: #908CAA\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #E0DEF4\">            urlString </span><span style=\"color: #3E8FB0\">=</span><span style=\"color: #E0DEF4\"> </span><span style=\"color: #E0DEF4; font-style: italic\">URLDecoder</span><span style=\"color: #908CAA\">.</span><span style=\"color: #EA9A97\">decode</span><span style=\"color: #908CAA\">(</span><span style=\"color: #E0DEF4\">urlString</span><span style=\"color: #908CAA\">,</span><span style=\"color: #E0DEF4\"> </span><span style=\"color: #E0DEF4; font-style: italic\">StandardCharsets</span><span style=\"color: #908CAA\">.</span><span style=\"color: #E0DEF4; font-style: italic\">UTF_8</span><span style=\"color: #908CAA\">.</span><span style=\"color: #EA9A97\">name</span><span style=\"color: #908CAA\">());</span></span>\n<span class=\"line\"><span style=\"color: #E0DEF4\">        </span><span style=\"color: #908CAA\">&#125;</span><span style=\"color: #E0DEF4\"> </span><span style=\"color: #3E8FB0\">catch</span><span style=\"color: #E0DEF4\"> </span><span style=\"color: #908CAA\">(</span><span style=\"color: #3E8FB0\">UnsupportedEncodingException</span><span style=\"color: #E0DEF4\"> </span><span style=\"color: #C4A7E7; font-style: italic\">e</span><span style=\"color: #908CAA\">)</span><span style=\"color: #E0DEF4\"> </span><span style=\"color: #908CAA\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #E0DEF4\">            </span><span style=\"color: #3E8FB0\">throw</span><span style=\"color: #E0DEF4\"> </span><span style=\"color: #3E8FB0\">new</span><span style=\"color: #E0DEF4\"> </span><span style=\"color: #EA9A97\">RuntimeException</span><span style=\"color: #E0DEF4\">\t</span><span style=\"color: #908CAA\">(</span><span style=\"color: #E0DEF4\">e</span><span style=\"color: #908CAA\">);</span></span>\n<span class=\"line\"><span style=\"color: #E0DEF4\">        </span><span style=\"color: #908CAA\">&#125;</span></span>\n<span class=\"line\"><span style=\"color: #E0DEF4\">        </span><span style=\"color: #3E8FB0\">String</span><span style=\"color: #E0DEF4\"> </span><span style=\"color: #E0DEF4; font-style: italic\">absolutePath</span><span style=\"color: #E0DEF4\"> </span><span style=\"color: #3E8FB0\">=</span><span style=\"color: #E0DEF4\"> </span><span style=\"color: #E0DEF4; font-style: italic\">urlString</span><span style=\"color: #908CAA\">.</span><span style=\"color: #EA9A97\">replace</span><span style=\"color: #908CAA\">(</span><span style=\"color: #F6C177\">&quot;file:&quot;</span><span style=\"color: #908CAA\">,</span><span style=\"color: #E0DEF4\"> </span><span style=\"color: #F6C177\">&quot;&quot;</span><span style=\"color: #908CAA\">);</span></span>\n<span class=\"line\"><span style=\"color: #E0DEF4\">        </span><span style=\"color: #E0DEF4; font-style: italic\">System</span><span style=\"color: #908CAA\">.</span><span style=\"color: #E0DEF4; font-style: italic\">out</span><span style=\"color: #908CAA\">.</span><span style=\"color: #EA9A97\">println</span><span style=\"color: #908CAA\">(</span><span style=\"color: #F6C177\">&quot;Absolute path: &quot;</span><span style=\"color: #E0DEF4\"> </span><span style=\"color: #3E8FB0\">+</span><span style=\"color: #E0DEF4\"> absolutePath</span><span style=\"color: #908CAA\">);</span><span style=\"color: #E0DEF4\"> </span><span style=\"color: #908CAA; font-style: italic\">//</span><span style=\"color: #6E6A86; font-style: italic\"> /home/anicaa/%e6%96%87%e6%a1%a3/backup-blog/blog/source/code/Java/backend-learning/my-spring/target/test-classes/</span></span>\n<span class=\"line\"><span style=\"color: #908CAA\">        </span><span style=\"color: #908CAA; font-style: italic\">//</span><span style=\"color: #6E6A86; font-style: italic\"> 2.2. 将test-classes 替换成 classes</span></span>\n<span class=\"line\"><span style=\"color: #E0DEF4\">        </span><span style=\"color: #3E8FB0\">if</span><span style=\"color: #E0DEF4\"> </span><span style=\"color: #908CAA\">(</span><span style=\"color: #E0DEF4; font-style: italic\">absolutePath</span><span style=\"color: #908CAA\">.</span><span style=\"color: #EA9A97\">contains</span><span style=\"color: #908CAA\">(</span><span style=\"color: #F6C177\">&quot;test-classes&quot;</span><span style=\"color: #908CAA\">))</span><span style=\"color: #E0DEF4\"> </span><span style=\"color: #908CAA\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #E0DEF4\">            absolutePath </span><span style=\"color: #3E8FB0\">=</span><span style=\"color: #E0DEF4\"> </span><span style=\"color: #E0DEF4; font-style: italic\">absolutePath</span><span style=\"color: #908CAA\">.</span><span style=\"color: #EA9A97\">replace</span><span style=\"color: #908CAA\">(</span><span style=\"color: #F6C177\">&quot;test-classes&quot;</span><span style=\"color: #908CAA\">,</span><span style=\"color: #E0DEF4\"> </span><span style=\"color: #F6C177\">&quot;classes&quot;</span><span style=\"color: #908CAA\">);</span></span>\n<span class=\"line\"><span style=\"color: #E0DEF4\">        </span><span style=\"color: #908CAA\">&#125;</span></span>\n<span class=\"line\"><span style=\"color: #908CAA\">        </span><span style=\"color: #908CAA; font-style: italic\">//</span><span style=\"color: #6E6A86; font-style: italic\"> 4. 最后加上 需要被扫描的路径</span></span>\n<span class=\"line\"><span style=\"color: #E0DEF4\">        absolutePath </span><span style=\"color: #3E8FB0\">+=</span><span style=\"color: #E0DEF4\"> componentScanPackage</span><span style=\"color: #908CAA\">;</span></span>\n<span class=\"line\"><span style=\"color: #E0DEF4\">        </span><span style=\"color: #E0DEF4; font-style: italic\">System</span><span style=\"color: #908CAA\">.</span><span style=\"color: #E0DEF4; font-style: italic\">out</span><span style=\"color: #908CAA\">.</span><span style=\"color: #EA9A97\">println</span><span style=\"color: #908CAA\">(</span><span style=\"color: #F6C177\">&quot;Final absolutePath: &quot;</span><span style=\"color: #E0DEF4\"> </span><span style=\"color: #3E8FB0\">+</span><span style=\"color: #E0DEF4\"> absolutePath</span><span style=\"color: #908CAA\">);</span></span>\n<span class=\"line\"><span style=\"color: #908CAA\">        </span><span style=\"color: #908CAA; font-style: italic\">//</span><span style=\"color: #6E6A86; font-style: italic\"> 4. 递归 扫描 该路径下所有的类</span></span>\n<span class=\"line\"><span style=\"color: #E0DEF4\">        </span><span style=\"color: #EA9A97\">findAllClasses</span><span style=\"color: #908CAA\">(</span><span style=\"color: #3E8FB0\">new</span><span style=\"color: #E0DEF4\"> </span><span style=\"color: #EA9A97\">File</span><span style=\"color: #908CAA\">(</span><span style=\"color: #E0DEF4\">absolutePath</span><span style=\"color: #908CAA\">));</span></span>\n<span class=\"line\"><span style=\"color: #E0DEF4\">    </span><span style=\"color: #908CAA\">&#125;</span></span></code></pre></div><ul>\n<li><p>注意， 如果包含该项目的 文件目录 存在中文字符， 则需要把路径转换成 utf-8</p>\n<div class=\"language-java\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">java</span><pre class=\"shiki rose-pine-moon\" style=\"background-color: #232136\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #908CAA\">        </span><span style=\"color: #908CAA; font-style: italic\">//</span><span style=\"color: #6E6A86; font-style: italic\"> 2. 去掉 当前路径的 file:/,  变成 classPath 类路径， 或绝对路径。 注意linux 是去掉 file:, 需要保留 /</span></span>\n<span class=\"line\"><span style=\"color: #E0DEF4\">        </span><span style=\"color: #3E8FB0\">String</span><span style=\"color: #E0DEF4\"> </span><span style=\"color: #E0DEF4; font-style: italic\">urlString</span><span style=\"color: #E0DEF4\"> </span><span style=\"color: #3E8FB0\">=</span><span style=\"color: #E0DEF4\"> </span><span style=\"color: #E0DEF4; font-style: italic\">resource</span><span style=\"color: #908CAA\">.</span><span style=\"color: #EA9A97\">toString</span><span style=\"color: #908CAA\">();</span></span>\n<span class=\"line\"><span style=\"color: #908CAA\">        </span><span style=\"color: #908CAA; font-style: italic\">//</span><span style=\"color: #6E6A86; font-style: italic\"> 2.1 我的机器是包含中文路径的，所以要转成utf-8</span></span>\n<span class=\"line\"><span style=\"color: #E0DEF4\">        </span><span style=\"color: #3E8FB0\">try</span><span style=\"color: #E0DEF4\"> </span><span style=\"color: #908CAA\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #E0DEF4\">            urlString </span><span style=\"color: #3E8FB0\">=</span><span style=\"color: #E0DEF4\"> </span><span style=\"color: #E0DEF4; font-style: italic\">URLDecoder</span><span style=\"color: #908CAA\">.</span><span style=\"color: #EA9A97\">decode</span><span style=\"color: #908CAA\">(</span><span style=\"color: #E0DEF4\">urlString</span><span style=\"color: #908CAA\">,</span><span style=\"color: #E0DEF4\"> </span><span style=\"color: #E0DEF4; font-style: italic\">StandardCharsets</span><span style=\"color: #908CAA\">.</span><span style=\"color: #E0DEF4; font-style: italic\">UTF_8</span><span style=\"color: #908CAA\">.</span><span style=\"color: #EA9A97\">name</span><span style=\"color: #908CAA\">());</span></span>\n<span class=\"line\"><span style=\"color: #E0DEF4\">        </span><span style=\"color: #908CAA\">&#125;</span><span style=\"color: #E0DEF4\"> </span><span style=\"color: #3E8FB0\">catch</span><span style=\"color: #E0DEF4\"> </span><span style=\"color: #908CAA\">(</span><span style=\"color: #3E8FB0\">UnsupportedEncodingException</span><span style=\"color: #E0DEF4\"> </span><span style=\"color: #C4A7E7; font-style: italic\">e</span><span style=\"color: #908CAA\">)</span><span style=\"color: #E0DEF4\"> </span><span style=\"color: #908CAA\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #E0DEF4\">            </span><span style=\"color: #3E8FB0\">throw</span><span style=\"color: #E0DEF4\"> </span><span style=\"color: #3E8FB0\">new</span><span style=\"color: #E0DEF4\"> </span><span style=\"color: #EA9A97\">RuntimeException</span><span style=\"color: #908CAA\">(</span><span style=\"color: #E0DEF4\">e</span><span style=\"color: #908CAA\">);</span></span>\n<span class=\"line\"><span style=\"color: #E0DEF4\">        </span><span style=\"color: #908CAA\">&#125;</span></span></code></pre></div></li>\n</ul>\n<h3 id=\"4-4-加载-被扫描包-下的所有类-class结尾\"><a href=\"#4-4-加载-被扫描包-下的所有类-class结尾\" class=\"headerlink\" title=\"4.4 加载 被扫描包 下的所有类 (class结尾)\"></a>4.4 加载 被扫描包 下的所有类 (class结尾)</h3><div class=\"language-txt\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">txt</span><pre class=\"shiki rose-pine-moon\" style=\"background-color: #232136\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #e0def4\">/**</span></span>\n<span class=\"line\"><span style=\"color: #e0def4\">     * 递归扫描 指定路径下的 所有class</span></span>\n<span class=\"line\"><span style=\"color: #e0def4\">     *</span></span>\n<span class=\"line\"><span style=\"color: #e0def4\">     * @param file classPath那个目录对应的包 (文件夹)</span></span>\n<span class=\"line\"><span style=\"color: #e0def4\">     */</span></span>\n<span class=\"line\"><span style=\"color: #e0def4\">    private void findAllClasses(File file) &#123;</span></span>\n<span class=\"line\"><span style=\"color: #e0def4\">        // 1.将该目录下的所有文件转换成files</span></span>\n<span class=\"line\"><span style=\"color: #e0def4\">        File[] files = file.listFiles();</span></span>\n<span class=\"line\"><span style=\"color: #e0def4\">        // 2.递归寻找</span></span>\n<span class=\"line\"><span style=\"color: #e0def4\">        for (File f : files) &#123;</span></span>\n<span class=\"line\"><span style=\"color: #e0def4\">            //如果是目录，则继续往下面找</span></span>\n<span class=\"line\"><span style=\"color: #e0def4\">            if (f.isDirectory()) &#123;</span></span>\n<span class=\"line\"><span style=\"color: #e0def4\">                findAllClasses(f);</span></span>\n<span class=\"line\"><span style=\"color: #e0def4\">            &#125; else &#123;</span></span>\n<span class=\"line\"><span style=\"color: #e0def4\">                String name = f.getName();</span></span>\n<span class=\"line\"><span style=\"color: #e0def4\">                //如果 文件名以 .class 结尾， 则算作结果</span></span>\n<span class=\"line\"><span style=\"color: #e0def4\">                if (name.endsWith(&quot;.class&quot;)) &#123;</span></span>\n<span class=\"line\"><span style=\"color: #e0def4\">                    System.out.println(f.getPath());</span></span>\n<span class=\"line\"><span style=\"color: #e0def4\">                &#125;</span></span>\n<span class=\"line\"><span style=\"color: #e0def4\">            &#125;</span></span>\n<span class=\"line\"><span style=\"color: #e0def4\">        &#125;</span></span>\n<span class=\"line\"><span style=\"color: #e0def4\">    &#125;</span></span></code></pre></div><p><img src=\"/../img/image-20240412231610615.png\" alt=\"image-20240412231610615\"></p>\n<p>图片是错的，代码后面改过，图片没复现。注意org&#x2F;myspringframework不应该出现。</p>\n<h3 id=\"4-5-将-绝对路径-转换成-类路径\"><a href=\"#4-5-将-绝对路径-转换成-类路径\" class=\"headerlink\" title=\"4.5 将 绝对路径 转换成 类路径\"></a>4.5 将 绝对路径 转换成 类路径</h3><blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>并将 类路径 存放在 List中</p></blockquote>\n<div class=\"language-java\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">java</span><pre class=\"shiki rose-pine-moon\" style=\"background-color: #232136\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #E0DEF4\">    </span><span style=\"color: #3E8FB0\">private</span><span style=\"color: #E0DEF4\"> </span><span style=\"color: #3E8FB0\">List</span><span style=\"color: #908CAA\">&lt;</span><span style=\"color: #3E8FB0\">String</span><span style=\"color: #908CAA\">&gt;</span><span style=\"color: #E0DEF4\"> </span><span style=\"color: #E0DEF4; font-style: italic\">classPath</span><span style=\"color: #E0DEF4\"> </span><span style=\"color: #3E8FB0\">=</span><span style=\"color: #E0DEF4\"> </span><span style=\"color: #3E8FB0\">new</span><span style=\"color: #E0DEF4\"> </span><span style=\"color: #3E8FB0\">ArrayList</span><span style=\"color: #908CAA\">&lt;&gt;();</span></span>\n<span class=\"line\"><span style=\"color: #E0DEF4\">    </span></span>\n<span class=\"line\"><span style=\"color: #6E6A86; font-style: italic\">    </span><span style=\"color: #908CAA; font-style: italic\">/**</span></span>\n<span class=\"line\"><span style=\"color: #6E6A86; font-style: italic\">     * 递归扫描 指定路径下的 所有class</span></span>\n<span class=\"line\"><span style=\"color: #6E6A86; font-style: italic\">     *</span></span>\n<span class=\"line\"><span style=\"color: #6E6A86; font-style: italic\">     * </span><span style=\"color: #3E8FB0; font-style: italic\">@param</span><span style=\"color: #6E6A86; font-style: italic\"> </span><span style=\"color: #C4A7E7; font-style: italic\">file</span><span style=\"color: #6E6A86; font-style: italic\"> classPath那个目录对应的包 (文件夹)</span></span>\n<span class=\"line\"><span style=\"color: #6E6A86; font-style: italic\">     </span><span style=\"color: #908CAA; font-style: italic\">*/</span></span>\n<span class=\"line\"><span style=\"color: #E0DEF4\">    </span><span style=\"color: #3E8FB0\">private</span><span style=\"color: #E0DEF4\"> </span><span style=\"color: #3E8FB0\">void</span><span style=\"color: #E0DEF4\"> </span><span style=\"color: #EA9A97\">findAllClasses</span><span style=\"color: #908CAA\">(</span><span style=\"color: #3E8FB0\">File</span><span style=\"color: #E0DEF4\"> file</span><span style=\"color: #908CAA\">)</span><span style=\"color: #E0DEF4\"> </span><span style=\"color: #908CAA\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #908CAA\">        </span><span style=\"color: #908CAA; font-style: italic\">//</span><span style=\"color: #6E6A86; font-style: italic\"> 1.将该目录下的所有文件转换成files</span></span>\n<span class=\"line\"><span style=\"color: #E0DEF4\">        </span><span style=\"color: #3E8FB0\">File</span><span style=\"color: #908CAA\">[]</span><span style=\"color: #E0DEF4\"> </span><span style=\"color: #E0DEF4; font-style: italic\">files</span><span style=\"color: #E0DEF4\"> </span><span style=\"color: #3E8FB0\">=</span><span style=\"color: #E0DEF4\"> </span><span style=\"color: #E0DEF4; font-style: italic\">file</span><span style=\"color: #908CAA\">.</span><span style=\"color: #EA9A97\">listFiles</span><span style=\"color: #908CAA\">();</span></span>\n<span class=\"line\"><span style=\"color: #908CAA\">        </span><span style=\"color: #908CAA; font-style: italic\">//</span><span style=\"color: #6E6A86; font-style: italic\"> 2.递归寻找</span></span>\n<span class=\"line\"><span style=\"color: #E0DEF4\">        </span><span style=\"color: #3E8FB0\">for</span><span style=\"color: #E0DEF4\"> </span><span style=\"color: #908CAA\">(</span><span style=\"color: #3E8FB0\">File</span><span style=\"color: #E0DEF4\"> </span><span style=\"color: #E0DEF4; font-style: italic\">f</span><span style=\"color: #E0DEF4\"> </span><span style=\"color: #3E8FB0\">:</span><span style=\"color: #E0DEF4\"> files</span><span style=\"color: #908CAA\">)</span><span style=\"color: #E0DEF4\"> </span><span style=\"color: #908CAA\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #908CAA\">            </span><span style=\"color: #908CAA; font-style: italic\">//</span><span style=\"color: #6E6A86; font-style: italic\">如果是目录，则继续往下面找</span></span>\n<span class=\"line\"><span style=\"color: #E0DEF4\">            </span><span style=\"color: #3E8FB0\">if</span><span style=\"color: #E0DEF4\"> </span><span style=\"color: #908CAA\">(</span><span style=\"color: #E0DEF4; font-style: italic\">f</span><span style=\"color: #908CAA\">.</span><span style=\"color: #EA9A97\">isDirectory</span><span style=\"color: #908CAA\">())</span><span style=\"color: #E0DEF4\"> </span><span style=\"color: #908CAA\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #E0DEF4\">                </span><span style=\"color: #EA9A97\">findAllClasses</span><span style=\"color: #908CAA\">(</span><span style=\"color: #E0DEF4\">f</span><span style=\"color: #908CAA\">);</span></span>\n<span class=\"line\"><span style=\"color: #E0DEF4\">            </span><span style=\"color: #908CAA\">&#125;</span><span style=\"color: #E0DEF4\"> </span><span style=\"color: #3E8FB0\">else</span><span style=\"color: #E0DEF4\"> </span><span style=\"color: #908CAA\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #E0DEF4\">                </span><span style=\"color: #3E8FB0\">String</span><span style=\"color: #E0DEF4\"> </span><span style=\"color: #E0DEF4; font-style: italic\">name</span><span style=\"color: #E0DEF4\"> </span><span style=\"color: #3E8FB0\">=</span><span style=\"color: #E0DEF4\"> </span><span style=\"color: #E0DEF4; font-style: italic\">f</span><span style=\"color: #908CAA\">.</span><span style=\"color: #EA9A97\">getName</span><span style=\"color: #908CAA\">();</span></span>\n<span class=\"line\"><span style=\"color: #908CAA\">                </span><span style=\"color: #908CAA; font-style: italic\">//</span><span style=\"color: #6E6A86; font-style: italic\">如果 文件名以 .class 结尾， 则算作结果</span></span>\n<span class=\"line\"><span style=\"color: #E0DEF4\">                </span><span style=\"color: #3E8FB0\">if</span><span style=\"color: #E0DEF4\"> </span><span style=\"color: #908CAA\">(</span><span style=\"color: #E0DEF4; font-style: italic\">name</span><span style=\"color: #908CAA\">.</span><span style=\"color: #EA9A97\">endsWith</span><span style=\"color: #908CAA\">(</span><span style=\"color: #F6C177\">&quot;.class&quot;</span><span style=\"color: #908CAA\">))</span><span style=\"color: #E0DEF4\"> </span><span style=\"color: #908CAA\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #E0DEF4\">                    </span><span style=\"color: #3E8FB0\">String</span><span style=\"color: #E0DEF4\"> </span><span style=\"color: #E0DEF4; font-style: italic\">path</span><span style=\"color: #E0DEF4\"> </span><span style=\"color: #3E8FB0\">=</span><span style=\"color: #E0DEF4\"> </span><span style=\"color: #E0DEF4; font-style: italic\">f</span><span style=\"color: #908CAA\">.</span><span style=\"color: #EA9A97\">getPath</span><span style=\"color: #908CAA\">();</span></span>\n<span class=\"line\"><span style=\"color: #E0DEF4\">                    </span><span style=\"color: #E0DEF4; font-style: italic\">classPath</span><span style=\"color: #908CAA\">.</span><span style=\"color: #EA9A97\">add</span><span style=\"color: #908CAA\">(</span><span style=\"color: #EA9A97\">handleClassPath</span><span style=\"color: #908CAA\">(</span><span style=\"color: #E0DEF4\">path</span><span style=\"color: #908CAA\">));</span></span>\n<span class=\"line\"><span style=\"color: #E0DEF4\">                </span><span style=\"color: #908CAA\">&#125;</span></span>\n<span class=\"line\"><span style=\"color: #E0DEF4\">            </span><span style=\"color: #908CAA\">&#125;</span></span>\n<span class=\"line\"><span style=\"color: #E0DEF4\">        </span><span style=\"color: #908CAA\">&#125;</span></span>\n<span class=\"line\"><span style=\"color: #E0DEF4\">    </span><span style=\"color: #908CAA\">&#125;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #6E6A86; font-style: italic\">    </span><span style=\"color: #908CAA; font-style: italic\">/**</span></span>\n<span class=\"line\"><span style=\"color: #6E6A86; font-style: italic\">     * 将字符串转换成 com.anicaaz.springplayground.controller格式/</span></span>\n<span class=\"line\"><span style=\"color: #6E6A86; font-style: italic\">     * 我这里是 Linux写法， 所以用的是 /， 如果是 Windows, 则需要 变成 \\\\.  第一个\\负责转义</span></span>\n<span class=\"line\"><span style=\"color: #6E6A86; font-style: italic\">     * 这个方法结束后，就是真的类路径了，可以用反射。</span></span>\n<span class=\"line\"><span style=\"color: #6E6A86; font-style: italic\">     *</span></span>\n<span class=\"line\"><span style=\"color: #6E6A86; font-style: italic\">     * </span><span style=\"color: #3E8FB0; font-style: italic\">@param</span><span style=\"color: #6E6A86; font-style: italic\"> </span><span style=\"color: #C4A7E7; font-style: italic\">path</span></span>\n<span class=\"line\"><span style=\"color: #6E6A86; font-style: italic\">     * </span><span style=\"color: #3E8FB0; font-style: italic\">@return</span></span>\n<span class=\"line\"><span style=\"color: #6E6A86; font-style: italic\">     </span><span style=\"color: #908CAA; font-style: italic\">*/</span></span>\n<span class=\"line\"><span style=\"color: #E0DEF4\">    </span><span style=\"color: #3E8FB0\">private</span><span style=\"color: #E0DEF4\"> </span><span style=\"color: #3E8FB0\">String</span><span style=\"color: #E0DEF4\"> </span><span style=\"color: #EA9A97\">handleClassPath</span><span style=\"color: #908CAA\">(</span><span style=\"color: #3E8FB0\">String</span><span style=\"color: #E0DEF4\"> path</span><span style=\"color: #908CAA\">)</span><span style=\"color: #E0DEF4\"> </span><span style=\"color: #908CAA\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #908CAA\">        </span><span style=\"color: #908CAA; font-style: italic\">//</span><span style=\"color: #6E6A86; font-style: italic\"> 1. 获取 class/ c开头的下标</span></span>\n<span class=\"line\"><span style=\"color: #908CAA\">        </span><span style=\"color: #908CAA; font-style: italic\">//</span><span style=\"color: #6E6A86; font-style: italic\"> classes/ 长度为8</span></span>\n<span class=\"line\"><span style=\"color: #908CAA\">        </span><span style=\"color: #908CAA; font-style: italic\">//</span><span style=\"color: #6E6A86; font-style: italic\"> .class 长度为6</span></span>\n<span class=\"line\"><span style=\"color: #E0DEF4\">        </span><span style=\"color: #3E8FB0\">int</span><span style=\"color: #E0DEF4\"> </span><span style=\"color: #E0DEF4; font-style: italic\">index</span><span style=\"color: #E0DEF4\"> </span><span style=\"color: #3E8FB0\">=</span><span style=\"color: #E0DEF4\"> </span><span style=\"color: #E0DEF4; font-style: italic\">path</span><span style=\"color: #908CAA\">.</span><span style=\"color: #EA9A97\">indexOf</span><span style=\"color: #908CAA\">(</span><span style=\"color: #F6C177\">&quot;classes/&quot;</span><span style=\"color: #908CAA\">);</span></span>\n<span class=\"line\"><span style=\"color: #908CAA\">        </span><span style=\"color: #908CAA; font-style: italic\">//</span><span style=\"color: #6E6A86; font-style: italic\"> 2. 从 com 开头 截取</span></span>\n<span class=\"line\"><span style=\"color: #E0DEF4\">        path </span><span style=\"color: #3E8FB0\">=</span><span style=\"color: #E0DEF4\"> </span><span style=\"color: #E0DEF4; font-style: italic\">path</span><span style=\"color: #908CAA\">.</span><span style=\"color: #EA9A97\">substring</span><span style=\"color: #908CAA\">(</span><span style=\"color: #E0DEF4\">index </span><span style=\"color: #3E8FB0\">+</span><span style=\"color: #E0DEF4\"> </span><span style=\"color: #EA9A97\">8</span><span style=\"color: #908CAA\">,</span><span style=\"color: #E0DEF4\"> </span><span style=\"color: #E0DEF4; font-style: italic\">path</span><span style=\"color: #908CAA\">.</span><span style=\"color: #EA9A97\">length</span><span style=\"color: #908CAA\">()</span><span style=\"color: #E0DEF4\"> </span><span style=\"color: #3E8FB0\">-</span><span style=\"color: #E0DEF4\"> </span><span style=\"color: #EA9A97\">6</span><span style=\"color: #908CAA\">);</span></span>\n<span class=\"line\"><span style=\"color: #908CAA\">        </span><span style=\"color: #908CAA; font-style: italic\">//</span><span style=\"color: #6E6A86; font-style: italic\"> 3. 最后 把 / 替换成 .</span></span>\n<span class=\"line\"><span style=\"color: #E0DEF4\">        path </span><span style=\"color: #3E8FB0\">=</span><span style=\"color: #E0DEF4\"> </span><span style=\"color: #E0DEF4; font-style: italic\">path</span><span style=\"color: #908CAA\">.</span><span style=\"color: #EA9A97\">replace</span><span style=\"color: #908CAA\">(</span><span style=\"color: #F6C177\">&#39;/&#39;</span><span style=\"color: #908CAA\">,</span><span style=\"color: #E0DEF4\"> </span><span style=\"color: #F6C177\">&#39;.&#39;</span><span style=\"color: #908CAA\">);</span></span>\n<span class=\"line\"><span style=\"color: #E0DEF4\">        </span><span style=\"color: #E0DEF4; font-style: italic\">System</span><span style=\"color: #908CAA\">.</span><span style=\"color: #E0DEF4; font-style: italic\">out</span><span style=\"color: #908CAA\">.</span><span style=\"color: #EA9A97\">println</span><span style=\"color: #908CAA\">(</span><span style=\"color: #F6C177\">&quot;Final ClassPath: &quot;</span><span style=\"color: #E0DEF4\"> </span><span style=\"color: #3E8FB0\">+</span><span style=\"color: #E0DEF4\"> path</span><span style=\"color: #908CAA\">);</span></span>\n<span class=\"line\"><span style=\"color: #E0DEF4\">        </span><span style=\"color: #3E8FB0\">return</span><span style=\"color: #E0DEF4\"> path</span><span style=\"color: #908CAA\">;</span></span>\n<span class=\"line\"><span style=\"color: #E0DEF4\">    </span><span style=\"color: #908CAA\">&#125;</span></span></code></pre></div><p><img src=\"/../img/image-20240412235814371.png\" alt=\"image-20240412235814371\"></p>\n<h1 id=\"Spring复习笔记\"><a href=\"#Spring复习笔记\" class=\"headerlink\" title=\"Spring复习笔记\"></a>Spring复习笔记</h1><blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>Spring是开源的免费框架</p>\n<p><strong>轻量级、非入侵式的</strong></p>\n<p><strong>IOC控制反转， AOP面向切面</strong>编程 \t\t\t\t\t是重点</p>\n<p>支持事务，对框架·整合的指出\t\t\t\t\t\t\t也是重点</p></blockquote>\n<p>总结一句话。Spring就是一个轻量级的控制反转和面向切面编程的框架。</p>\n<h2 id=\"LC1-任何项目，首先先导这两个maven\"><a href=\"#LC1-任何项目，首先先导这两个maven\" class=\"headerlink\" title=\"LC1. 任何项目，首先先导这两个maven\"></a>LC1. 任何项目，首先先导这两个maven</h2><div class=\"language-txt\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">txt</span><pre class=\"shiki rose-pine-moon\" style=\"background-color: #232136\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #e0def4\">1. spring-webmvc</span></span>\n<span class=\"line\"><span style=\"color: #e0def4\">2. spring-jdbc</span></span>\n<span class=\"line\"><span style=\"color: #e0def4\"></span></span>\n<span class=\"line\"><span style=\"color: #e0def4\">第一个webmvc包含了很多spring的包，比如spring-core，spring-context。这样就不用多次导入不同的包了。</span></span>\n<span class=\"line\"><span style=\"color: #e0def4\"></span></span>\n<span class=\"line\"><span style=\"color: #e0def4\">第二个jdbc是用来整合mybatis连接数据库的</span></span></code></pre></div><p><img src=\"C:\\Users\\18795\\AppData\\Roaming\\Typora\\typora-user-images\\image-20230417092051417.png\" alt=\"image-20230417092051417\"></p>\n<h2 id=\"LC2-Spring简介\"><a href=\"#LC2-Spring简介\" class=\"headerlink\" title=\"LC2. Spring简介\"></a>LC2. Spring简介</h2><blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><ul>\n<li><p>Springboot快速开发的脚手架。基于springboot可以快速开发单个微服务.</p>\n</li>\n<li><p>Springcloud是基于springboot实现的。</p>\n</li>\n</ul></blockquote>\n<p>Spring起到了承上启下的作用。</p>\n<p>弊端： 发展了太久，违背了原来的理念。</p>\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><h2 id=\"LC3-Spring-IOC\"><a href=\"#LC3-Spring-IOC\" class=\"headerlink\" title=\"LC3. Spring IOC\"></a>LC3. Spring IOC</h2></blockquote>\n<p>以前写业务</p>\n<ul>\n<li><p>UserDao接口</p>\n</li>\n<li><p>UserDaoImpl实现类(会有多个)</p>\n</li>\n<li><p>UserService 业务接口</p>\n</li>\n<li><p>UserServiceImpl业务实现类(会有多个)</p>\n</li>\n<li><p><img src=\"C:\\Users\\18795\\AppData\\Roaming\\Typora\\typora-user-images\\image-20230417104203040.png\" alt=\"image-20230417104203040\"></p>\n</li>\n</ul>\n<p><img src=\"C:\\Users\\18795\\AppData\\Roaming\\Typora\\typora-user-images\\image-20230417092414541.png\" alt=\"image-20230417092414541\"></p>\n<p>在我们之前的业务中，用户的需求可能会影响我们原来的代码，我们需要根据用户的需求去修改源代码。</p>\n<p>改进1：<img src=\"C:\\Users\\18795\\AppData\\Roaming\\Typora\\typora-user-images\\image-20230417092618282.png\" alt=\"image-20230417092618282\"></p>\n<p>这样就可以动态的注入UserDao到UserServiceImpl中，避免写死。</p>\n<p>也就是主动型变了。原来是程序主动创建对象，现在是程序被动接受一个对象。<strong>系统的耦合性降低</strong>。</p>\n<h2 id=\"LC4-IOC本质\"><a href=\"#LC4-IOC本质\" class=\"headerlink\" title=\"LC4: IOC本质\"></a>LC4: IOC本质</h2><p><img src=\"C:\\Users\\18795\\AppData\\Roaming\\Typora\\typora-user-images\\image-20230417101934817.png\" alt=\"image-20230417101934817\"></p>\n<p>采用XML方式配置Bean的时候，Bean的定义信息是和实现分离的，而采用注解的方式可以把两者何为一体。Bean的定义信息直接以注解的形式定义再类中，从而达到了零配置的目的。</p>\n<p><strong>控制反转是一种通过描述（XML或注释），并通过第三方去生产或获取特定对象的方式。在Spring中实现控制反转的是IoC容器。其实现方式是依赖注入（Dependency Injection）。</strong></p>\n<blockquote>\n<p><strong>大白话理解Ioc就是。原本对象的创建都是由程序员来控制的。而现在，通过XML中写这些bean标签，以及使用Autowire等注解进行开发，可以让Spring Ioc容器帮我们来创建对象并完成对象的配置。程序员因此只需要获取这些由spring创建好的对象即可</strong></p></blockquote>\n<h2 id=\"LC5-Bean-Definition-Inheritance-Bean标签的理解\"><a href=\"#LC5-Bean-Definition-Inheritance-Bean标签的理解\" class=\"headerlink\" title=\"LC5: Bean Definition Inheritance (Bean标签的理解)\"></a>LC5: Bean Definition Inheritance (Bean标签的理解)</h2><blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>“Bean definition can contain a lot of configuration information, including <strong>constructor arguments</strong>, <strong>property values</strong>, and <strong>container-specific information</strong>, such as the <strong>initialization method</strong>, a static factory method name, and so on. “</p></blockquote>\n<p>需要掌握的代码</p>\n<div class=\"language-java\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">java</span><pre class=\"shiki rose-pine-moon\" style=\"background-color: #232136\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #3E8FB0\">ApplicationContext</span><span style=\"color: #E0DEF4\"> </span><span style=\"color: #E0DEF4; font-style: italic\">applicationConext</span><span style=\"color: #E0DEF4\"> </span><span style=\"color: #3E8FB0\">=</span><span style=\"color: #E0DEF4\"> </span><span style=\"color: #3E8FB0\">new</span><span style=\"color: #E0DEF4\"> </span><span style=\"color: #EA9A97\">ClassPathXmlApplicationContext</span><span style=\"color: #908CAA\">(</span><span style=\"color: #F6C177\">&quot;BeanName.xml&quot;</span><span style=\"color: #908CAA\">);</span></span></code></pre></div><h2 id=\"LC6-Spring对象的创建\"><a href=\"#LC6-Spring对象的创建\" class=\"headerlink\" title=\"LC6. Spring对象的创建\"></a>LC6. Spring对象的创建</h2><ol>\n<li>Spring容器默认使用无参构造创建对象</li>\n<li>假如需要使用有参构造创建对象， 三种方式 <constructor-arg><ol>\n<li>下标 index</li>\n<li>参数类型 type   -&gt; 不建议使用，多个同类型的参数，会乱。</li>\n<li>直接通过参数名 name.<ul>\n<li>也可以用ref 对象的方法。和通过参数名类似。</li>\n</ul>\n</li>\n</ol>\n</li>\n</ol>\n<p><strong>总结： 在配置文件加载的时候，容器中管理的对象就已经被初始化了。</strong></p>\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>面试： BeanFactory相关。</p>\n<p>BeanFactory是什么？FactoryBean又是什么？Bean存哪里, 怎么存？ BeanPostProcessor是什么？ 这些高频面试题都不讲，确实拉了</p></blockquote>\n<h3 id=\"1-BeanPostProcessor-是什么？\"><a href=\"#1-BeanPostProcessor-是什么？\" class=\"headerlink\" title=\"1.BeanPostProcessor 是什么？\"></a>1.BeanPostProcessor 是什么？</h3><blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>“The <code>BeanPostProcessor</code> interface defines callback methods that you can implement to provide your own (or override the container’s default) instantiation logic, dependency resolution logic, and so forth. If you want to implement some custom logic after the Spring container finishes instantiating, configuring, and initializing a bean, you can plug in one or more custom <code>BeanPostProcessor</code> implementations.”</p></blockquote>\n<p>首先， BeanPostProcessor是一个接口，定义了一些方法，来实现你对于对象创建时初始化的逻辑。当Spring Ioc容器实例化bean之后，BeanPostProcessor就开始工作了。</p>\n<h2 id=\"LC7-Spring配置详解\"><a href=\"#LC7-Spring配置详解\" class=\"headerlink\" title=\"LC7. Spring配置详解\"></a>LC7. Spring配置详解</h2><h3 id=\"1-别名\"><a href=\"#1-别名\" class=\"headerlink\" title=\"1. 别名\"></a>1. 别名</h3><p><bean> 标签的name和alias都是别名。getBean的时候，使用这两个标签配置的对象都可以被get到。</p>\n<p>使用name时，可以同时取多个别名。别名可以逗号，空格，分号分隔。</p>\n<h3 id=\"2-Import\"><a href=\"#2-Import\" class=\"headerlink\" title=\"2. Import\"></a>2. Import</h3><p>将多个配置文件导入到一个xml, 通常是把所有的xml导入到applicaitonContext.xml下</p>\n<div class=\"language-xml\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">xml</span><pre class=\"shiki rose-pine-moon\" style=\"background-color: #232136\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #6E6A86\">&lt;</span><span style=\"color: #9CCFD8\">import</span><span style=\"color: #E0DEF4\"> </span><span style=\"color: #C4A7E7; font-style: italic\">resource</span><span style=\"color: #E0DEF4\">=</span><span style=\"color: #F6C177\">&quot;beans1.xml&quot;</span><span style=\"color: #6E6A86\">&gt;</span></span>\n<span class=\"line\"><span style=\"color: #6E6A86\">&lt;</span><span style=\"color: #9CCFD8\">import</span><span style=\"color: #E0DEF4\"> </span><span style=\"color: #C4A7E7; font-style: italic\">resource</span><span style=\"color: #E0DEF4\">=</span><span style=\"color: #F6C177\">&quot;beans2.xml&quot;</span><span style=\"color: #6E6A86\">&gt;</span><span style=\"color: #E0DEF4\">    </span></span>\n<span class=\"line\"><span style=\"color: #6E6A86\">&lt;</span><span style=\"color: #9CCFD8\">import</span><span style=\"color: #E0DEF4\"> </span><span style=\"color: #C4A7E7; font-style: italic\">resource</span><span style=\"color: #E0DEF4\">=</span><span style=\"color: #F6C177\">&quot;beans3.xml&quot;</span><span style=\"color: #6E6A86\">&gt;</span><span style=\"color: #E0DEF4\">    </span></span></code></pre></div><h2 id=\"LC8-依赖注入\"><a href=\"#LC8-依赖注入\" class=\"headerlink\" title=\"LC8. 依赖注入\"></a>LC8. 依赖注入</h2><h3 id=\"1-构造器注入\"><a href=\"#1-构造器注入\" class=\"headerlink\" title=\"1. 构造器注入\"></a>1. 构造器注入</h3><p>​\t前面讲过了</p>\n<div class=\"language-xml\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">xml</span><pre class=\"shiki rose-pine-moon\" style=\"background-color: #232136\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #6E6A86\">&lt;</span><span style=\"color: #9CCFD8\">constructor-arg</span><span style=\"color: #6E6A86\">&gt;</span></span></code></pre></div><h3 id=\"2-Set方式注入\"><a href=\"#2-Set方式注入\" class=\"headerlink\" title=\"2. Set方式注入\"></a>2. Set方式注入</h3><blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>各种数据类型的注入</p>\n<p><img src=\"C:\\Users\\18795\\AppData\\Roaming\\Typora\\typora-user-images\\image-20230417165807121.png![image-20230417165836555](C:\\Users\\18795\\AppData\\Roaming\\Typora\\typora-user-images\\image-20230417165836555.png\" alt=\"image-20230417165807121\"></p></blockquote>\n<h3 id=\"3-拓展方式注入\"><a href=\"#3-拓展方式注入\" class=\"headerlink\" title=\"3. 拓展方式注入\"></a>3. 拓展方式注入</h3><p>命名空间注入：</p>\n<p>比如 p命名空间，直接能够注入property</p>\n<div class=\"language-txt\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">txt</span><pre class=\"shiki rose-pine-moon\" style=\"background-color: #232136\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #e0def4\">&lt;beans id=&quot;xxx&quot; class=&quot;com.xxx.xxx&quot; p:name=&quot;xxx&quot; p:age=&quot;11&quot;;</span></span></code></pre></div><p>以及  c命名空间，其实就是constructor-arg</p>\n<h2 id=\"LC9-Bean的作用域\"><a href=\"#LC9-Bean的作用域\" class=\"headerlink\" title=\"LC9. Bean的作用域\"></a>LC9. Bean的作用域</h2><ol>\n<li>单例模式（默认）</li>\n<li>原型模式</li>\n</ol>\n<h2 id=\"LC10-Bean的自动装配\"><a href=\"#LC10-Bean的自动装配\" class=\"headerlink\" title=\"LC10. Bean的自动装配\"></a>LC10. Bean的自动装配</h2><blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><ol>\n<li><strong>如果是byName，那么你的bean的id 必须严格遵守你在pojo里面定义的set方法中的后缀名。比如pojo中一个方法叫setXxx()。 注意本例中Xxx是一个引用类型的对象，那么，在你的bean id里面，只能写xxx（全小写，否则报错）。不能写xxx1   xxx2 ，Xxx 会报错</strong></li>\n<li><strong>而byType相反。你bean id想怎么写就怎么写。</strong> 管你xxx1 1xxx  xx1x, 只要class 是 com.example.xxx, spring都能通过反射创建你的对象.</li>\n</ol></blockquote>\n<p>Spring 在 2.5版本提供了对注解的支持。如果要使用注解，需要导入context约束。</p>\n<p>可以直接去Spring官网复制黏贴代码就可以。节约时间。</p>\n<p>链接： <a href=\"https://docs.spring.io/spring-framework/docs/current/reference/html/core.html#beans-annotation-config\">https://docs.spring.io/spring-framework/docs/current/reference/html/core.html#beans-annotation-config</a></p>\n<div class=\"language-xml\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">xml</span><pre class=\"shiki rose-pine-moon\" style=\"background-color: #232136\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #6E6A86\">&lt;?</span><span style=\"color: #9CCFD8\">xml</span><span style=\"color: #C4A7E7; font-style: italic\"> version</span><span style=\"color: #E0DEF4\">=</span><span style=\"color: #F6C177\">&quot;1.0&quot;</span><span style=\"color: #C4A7E7; font-style: italic\"> encoding</span><span style=\"color: #E0DEF4\">=</span><span style=\"color: #F6C177\">&quot;UTF-8&quot;</span><span style=\"color: #6E6A86\">?&gt;</span></span>\n<span class=\"line\"><span style=\"color: #6E6A86\">&lt;</span><span style=\"color: #9CCFD8\">beans</span><span style=\"color: #E0DEF4\"> </span><span style=\"color: #C4A7E7; font-style: italic\">xmlns</span><span style=\"color: #E0DEF4\">=</span><span style=\"color: #F6C177\">&quot;http://www.springframework.org/schema/beans&quot;</span></span>\n<span class=\"line\"><span style=\"color: #E0DEF4\">    </span><span style=\"color: #C4A7E7; font-style: italic\">xmlns</span><span style=\"color: #908CAA; font-style: italic\">:</span><span style=\"color: #C4A7E7; font-style: italic\">xsi</span><span style=\"color: #E0DEF4\">=</span><span style=\"color: #F6C177\">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span></span>\n<span class=\"line\"><span style=\"color: #E0DEF4\">    </span><span style=\"color: #C4A7E7; font-style: italic\">xmlns</span><span style=\"color: #908CAA; font-style: italic\">:</span><span style=\"color: #C4A7E7; font-style: italic\">context</span><span style=\"color: #E0DEF4\">=</span><span style=\"color: #F6C177\">&quot;http://www.springframework.org/schema/context&quot;</span></span>\n<span class=\"line\"><span style=\"color: #E0DEF4\">    </span><span style=\"color: #C4A7E7; font-style: italic\">xsi</span><span style=\"color: #908CAA; font-style: italic\">:</span><span style=\"color: #C4A7E7; font-style: italic\">schemaLocation</span><span style=\"color: #E0DEF4\">=</span><span style=\"color: #F6C177\">&quot;http://www.springframework.org/schema/beans</span></span>\n<span class=\"line\"><span style=\"color: #F6C177\">        https://www.springframework.org/schema/beans/spring-beans.xsd</span></span>\n<span class=\"line\"><span style=\"color: #F6C177\">        http://www.springframework.org/schema/context</span></span>\n<span class=\"line\"><span style=\"color: #F6C177\">        https://www.springframework.org/schema/context/spring-context.xsd&quot;</span><span style=\"color: #6E6A86\">&gt;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #E0DEF4\">    </span><span style=\"color: #6E6A86\">&lt;</span><span style=\"color: #9CCFD8\">context</span><span style=\"color: #908CAA\">:</span><span style=\"color: #9CCFD8\">annotation-config</span><span style=\"color: #6E6A86\">/&gt;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #6E6A86\">&lt;/</span><span style=\"color: #9CCFD8\">beans</span><span style=\"color: #6E6A86\">&gt;</span></span>\n<span class=\"line\"></span></code></pre></div><p>复制完这个配置类之后，我们的spring就可以通过注解来实现自动装配了。</p>\n<p>补充:</p>\n<div class=\"language-txt\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">txt</span><pre class=\"shiki rose-pine-moon\" style=\"background-color: #232136\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #e0def4\">&lt;context:annotation-config/&gt; 隐式的注册了以下的PostProcessors</span></span>\n<span class=\"line\"><span style=\"color: #e0def4\"></span></span>\n<span class=\"line\"><span style=\"color: #e0def4\">    ConfigurationClassPostProcessor</span></span>\n<span class=\"line\"><span style=\"color: #e0def4\"></span></span>\n<span class=\"line\"><span style=\"color: #e0def4\">    AutowiredAnnotationBeanPostProcessor</span></span>\n<span class=\"line\"><span style=\"color: #e0def4\"></span></span>\n<span class=\"line\"><span style=\"color: #e0def4\">    CommonAnnotationBeanPostProcessor</span></span>\n<span class=\"line\"><span style=\"color: #e0def4\"></span></span>\n<span class=\"line\"><span style=\"color: #e0def4\">    PersistenceAnnotationBeanPostProcessor</span></span>\n<span class=\"line\"><span style=\"color: #e0def4\"></span></span>\n<span class=\"line\"><span style=\"color: #e0def4\">    EventListenerMethodProcessor</span></span>\n<span class=\"line\"><span style=\"color: #e0def4\"></span></span>\n<span class=\"line\"><span style=\"color: #e0def4\"></span></span></code></pre></div><h3 id=\"1-Autowired可以用在哪里\"><a href=\"#1-Autowired可以用在哪里\" class=\"headerlink\" title=\"1. Autowired可以用在哪里\"></a>1. Autowired可以用在哪里</h3><ul>\n<li><p>构造器上</p>\n<ul>\n<li><p>注意! 如果由多个constructor并且没有无参构造的话，至少得有一个constructor上面需要加autowired. 这样Ioc才知道用什么。</p>\n<div class=\"language-txt\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">txt</span><pre class=\"shiki rose-pine-moon\" style=\"background-color: #232136\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #e0def4\">As of Spring Framework 4.3, an @Autowired annotation on such a constructor is no longer necessary if the target bean defines only one constructor to begin with. However, if several constructors are available and there is no primary/default constructor, at least one of the constructors must be annotated with @Autowired in order to instruct the container which one to use. See the discussion on constructor resolution for details.</span></span></code></pre></div></li>\n</ul>\n</li>\n<li><p>传统的set方法上</p>\n</li>\n</ul>\n<div class=\"language-java\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">java</span><pre class=\"shiki rose-pine-moon\" style=\"background-color: #232136\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #3E8FB0\">public</span><span style=\"color: #E0DEF4\"> </span><span style=\"color: #3E8FB0\">class</span><span style=\"color: #E0DEF4\"> </span><span style=\"color: #9CCFD8\">SimpleMovieLister</span><span style=\"color: #E0DEF4\"> </span><span style=\"color: #908CAA\">&#123;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #E0DEF4\">    </span><span style=\"color: #3E8FB0\">private</span><span style=\"color: #E0DEF4\"> </span><span style=\"color: #3E8FB0\">MovieFinder</span><span style=\"color: #E0DEF4\"> </span><span style=\"color: #E0DEF4; font-style: italic\">movieFinder</span><span style=\"color: #908CAA\">;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #E0DEF4\">    </span><span style=\"color: #908CAA\">@</span><span style=\"color: #3E8FB0\">Autowired</span></span>\n<span class=\"line\"><span style=\"color: #E0DEF4\">    </span><span style=\"color: #3E8FB0\">public</span><span style=\"color: #E0DEF4\"> </span><span style=\"color: #3E8FB0\">void</span><span style=\"color: #E0DEF4\"> </span><span style=\"color: #EA9A97\">setMovieFinder</span><span style=\"color: #908CAA\">(</span><span style=\"color: #3E8FB0\">MovieFinder</span><span style=\"color: #E0DEF4\"> </span><span style=\"color: #C4A7E7; font-style: italic\">movieFinder</span><span style=\"color: #908CAA\">)</span><span style=\"color: #E0DEF4\"> </span><span style=\"color: #908CAA\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #E0DEF4\">        </span><span style=\"color: #E0DEF4; font-style: italic\">this</span><span style=\"color: #908CAA\">.</span><span style=\"color: #E0DEF4; font-style: italic\">movieFinder</span><span style=\"color: #E0DEF4\"> </span><span style=\"color: #3E8FB0\">=</span><span style=\"color: #E0DEF4\"> movieFinder</span><span style=\"color: #908CAA\">;</span></span>\n<span class=\"line\"><span style=\"color: #E0DEF4\">    </span><span style=\"color: #908CAA\">&#125;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #908CAA\">    </span><span style=\"color: #908CAA; font-style: italic\">//</span><span style=\"color: #6E6A86; font-style: italic\"> ...</span></span>\n<span class=\"line\"><span style=\"color: #908CAA\">&#125;</span></span></code></pre></div><ul>\n<li><p>带参的方法上</p>\n<div class=\"language-txt\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">txt</span><pre class=\"shiki rose-pine-moon\" style=\"background-color: #232136\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #e0def4\">public class MovieRecommender &#123;</span></span>\n<span class=\"line\"><span style=\"color: #e0def4\"></span></span>\n<span class=\"line\"><span style=\"color: #e0def4\">    private MovieCatalog movieCatalog;</span></span>\n<span class=\"line\"><span style=\"color: #e0def4\"></span></span>\n<span class=\"line\"><span style=\"color: #e0def4\">    private CustomerPreferenceDao customerPreferenceDao;</span></span>\n<span class=\"line\"><span style=\"color: #e0def4\"></span></span>\n<span class=\"line\"><span style=\"color: #e0def4\">    @Autowired</span></span>\n<span class=\"line\"><span style=\"color: #e0def4\">    public void prepare(MovieCatalog movieCatalog,</span></span>\n<span class=\"line\"><span style=\"color: #e0def4\">            CustomerPreferenceDao customerPreferenceDao) &#123;</span></span>\n<span class=\"line\"><span style=\"color: #e0def4\">        this.movieCatalog = movieCatalog;</span></span>\n<span class=\"line\"><span style=\"color: #e0def4\">        this.customerPreferenceDao = customerPreferenceDao;</span></span>\n<span class=\"line\"><span style=\"color: #e0def4\">    &#125;</span></span>\n<span class=\"line\"><span style=\"color: #e0def4\"></span></span>\n<span class=\"line\"><span style=\"color: #e0def4\">    // ...</span></span>\n<span class=\"line\"><span style=\"color: #e0def4\">&#125;</span></span></code></pre></div></li>\n<li><p>成员变量和构造方法上</p>\n<div class=\"language-java\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">java</span><pre class=\"shiki rose-pine-moon\" style=\"background-color: #232136\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #3E8FB0\">public</span><span style=\"color: #E0DEF4\"> </span><span style=\"color: #3E8FB0\">class</span><span style=\"color: #E0DEF4\"> </span><span style=\"color: #9CCFD8\">MovieRecommender</span><span style=\"color: #E0DEF4\"> </span><span style=\"color: #908CAA\">&#123;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #E0DEF4\">    </span><span style=\"color: #3E8FB0\">private</span><span style=\"color: #E0DEF4\"> </span><span style=\"color: #3E8FB0\">final</span><span style=\"color: #E0DEF4\"> </span><span style=\"color: #3E8FB0\">CustomerPreferenceDao</span><span style=\"color: #E0DEF4\"> </span><span style=\"color: #E0DEF4; font-style: italic\">customerPreferenceDao</span><span style=\"color: #908CAA\">;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #E0DEF4\">    </span><span style=\"color: #908CAA\">@</span><span style=\"color: #3E8FB0\">Autowired</span></span>\n<span class=\"line\"><span style=\"color: #E0DEF4\">    </span><span style=\"color: #3E8FB0\">private</span><span style=\"color: #E0DEF4\"> </span><span style=\"color: #3E8FB0\">MovieCatalog</span><span style=\"color: #E0DEF4\"> </span><span style=\"color: #E0DEF4; font-style: italic\">movieCatalog</span><span style=\"color: #908CAA\">;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #E0DEF4\">    </span><span style=\"color: #908CAA\">@</span><span style=\"color: #3E8FB0\">Autowired</span></span>\n<span class=\"line\"><span style=\"color: #E0DEF4\">    </span><span style=\"color: #3E8FB0\">public</span><span style=\"color: #E0DEF4\"> </span><span style=\"color: #EA9A97\">MovieRecommender</span><span style=\"color: #908CAA\">(</span><span style=\"color: #3E8FB0\">CustomerPreferenceDao</span><span style=\"color: #E0DEF4\"> </span><span style=\"color: #C4A7E7; font-style: italic\">customerPreferenceDao</span><span style=\"color: #908CAA\">)</span><span style=\"color: #E0DEF4\"> </span><span style=\"color: #908CAA\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #E0DEF4\">        </span><span style=\"color: #E0DEF4; font-style: italic\">this</span><span style=\"color: #908CAA\">.</span><span style=\"color: #E0DEF4; font-style: italic\">customerPreferenceDao</span><span style=\"color: #E0DEF4\"> </span><span style=\"color: #3E8FB0\">=</span><span style=\"color: #E0DEF4\"> customerPreferenceDao</span><span style=\"color: #908CAA\">;</span></span>\n<span class=\"line\"><span style=\"color: #E0DEF4\">    </span><span style=\"color: #908CAA\">&#125;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #908CAA\">    </span><span style=\"color: #908CAA; font-style: italic\">//</span><span style=\"color: #6E6A86; font-style: italic\"> ...</span></span>\n<span class=\"line\"><span style=\"color: #908CAA\">&#125;</span></span>\n<span class=\"line\"></span></code></pre></div></li>\n<li><p>如果想让Spring为相同类型的多个bean的话，可以使用数组、集合</p>\n<div class=\"language-txt\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">txt</span><pre class=\"shiki rose-pine-moon\" style=\"background-color: #232136\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #e0def4\">public class MovieRecommender &#123;</span></span>\n<span class=\"line\"><span style=\"color: #e0def4\"></span></span>\n<span class=\"line\"><span style=\"color: #e0def4\">    @Autowired</span></span>\n<span class=\"line\"><span style=\"color: #e0def4\">    private MovieCatalog[] movieCatalogs;</span></span>\n<span class=\"line\"><span style=\"color: #e0def4\"></span></span>\n<span class=\"line\"><span style=\"color: #e0def4\">    // ...</span></span>\n<span class=\"line\"><span style=\"color: #e0def4\">&#125;</span></span>\n<span class=\"line\"><span style=\"color: #e0def4\"></span></span>\n<span class=\"line\"><span style=\"color: #e0def4\">public class MovieRecommender &#123;</span></span>\n<span class=\"line\"><span style=\"color: #e0def4\"></span></span>\n<span class=\"line\"><span style=\"color: #e0def4\">    private Set&lt;MovieCatalog&gt; movieCatalogs;</span></span>\n<span class=\"line\"><span style=\"color: #e0def4\"></span></span>\n<span class=\"line\"><span style=\"color: #e0def4\">    @Autowired</span></span>\n<span class=\"line\"><span style=\"color: #e0def4\">    public void setMovieCatalogs(Set&lt;MovieCatalog&gt; movieCatalogs) &#123;</span></span>\n<span class=\"line\"><span style=\"color: #e0def4\">        this.movieCatalogs = movieCatalogs;</span></span>\n<span class=\"line\"><span style=\"color: #e0def4\">    &#125;</span></span>\n<span class=\"line\"><span style=\"color: #e0def4\"></span></span>\n<span class=\"line\"><span style=\"color: #e0def4\">    // ...</span></span>\n<span class=\"line\"><span style=\"color: #e0def4\">&#125;</span></span>\n<span class=\"line\"><span style=\"color: #e0def4\"></span></span>\n<span class=\"line\"><span style=\"color: #e0def4\"></span></span></code></pre></div></li>\n</ul>\n<h3 id=\"2-Autowire失败条件\"><a href=\"#2-Autowire失败条件\" class=\"headerlink\" title=\"2. Autowire失败条件\"></a>2. Autowire失败条件</h3><blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>utowiring fails when no matching candidate beans are available for a given injection point.</p></blockquote>\n<h3 id=\"3-Autowiresd-required-false-意思\"><a href=\"#3-Autowiresd-required-false-意思\" class=\"headerlink\" title=\"3. @Autowiresd(required&#x3D; false) 意思\"></a>3. @Autowiresd(required&#x3D; false) 意思</h3><div class=\"language-txt\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">txt</span><pre class=\"shiki rose-pine-moon\" style=\"background-color: #232136\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #e0def4\">In other words, setting the required attribute to false indicates that the corresponding property is optional for autowiring purposes, and the property will be ignored if it cannot be autowired. This allows properties to be assigned default values that can be optionally overridden via dependency injection.</span></span></code></pre></div><p>其实就是不需要，但是有机会还是想注入。替代方案有Java.util.Optional 和  Nullable。</p>\n<h3 id=\"4-什么是Qualifier\"><a href=\"#4-什么是Qualifier\" class=\"headerlink\" title=\"4. 什么是Qualifier\"></a>4. 什么是Qualifier</h3><blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>多个同类型的bean实现autowire的时候使用</p>\n<div class=\"language-xml\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">xml</span><pre class=\"shiki rose-pine-moon\" style=\"background-color: #232136\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #E0DEF4\">@AutoWired</span></span>\n<span class=\"line\"><span style=\"color: #E0DEF4\">@Qualifier(value=xxx1)</span></span>\n<span class=\"line\"><span style=\"color: #E0DEF4\">private Dog dog;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"></span>\n<span class=\"line\"></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #6E6A86\">&lt;</span><span style=\"color: #9CCFD8\">xml</span><span style=\"color: #E0DEF4\"> ....</span><span style=\"color: #6E6A86\">&gt;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #6E6A86\">&lt;</span><span style=\"color: #9CCFD8\">bean</span><span style=\"color: #E0DEF4\"> </span><span style=\"color: #C4A7E7; font-style: italic\">id</span><span style=\"color: #E0DEF4\">=</span><span style=\"color: #F6C177\">&#39;xxx1&#39;</span><span style=\"color: #E0DEF4\"> </span><span style=\"color: #C4A7E7; font-style: italic\">class</span><span style=\"color: #E0DEF4\">=</span><span style=\"color: #F6C177\">&quot;dog&quot;</span><span style=\"color: #6E6A86\">&gt;</span></span>\n<span class=\"line\"><span style=\"color: #6E6A86\">&lt;</span><span style=\"color: #9CCFD8\">bean</span><span style=\"color: #E0DEF4\"> </span><span style=\"color: #C4A7E7; font-style: italic\">id</span><span style=\"color: #E0DEF4\">=</span><span style=\"color: #F6C177\">&quot;xxx&quot;</span><span style=\"color: #E0DEF4\">, </span><span style=\"color: #C4A7E7; font-style: italic\">class</span><span style=\"color: #E0DEF4\"> = </span><span style=\"color: #F6C177\">&quot;dog&quot;</span><span style=\"color: #6E6A86\">&gt;</span></span></code></pre></div></blockquote>\n<h3 id=\"5-Resource注解\"><a href=\"#5-Resource注解\" class=\"headerlink\" title=\"5. Resource注解\"></a>5. Resource注解</h3><blockquote>\n<p>Javax.annotation.resource</p>\n<p>Ioc查找时。要么xml中只有一个该类型bean。要么bean id和set后缀想通同。不然找不到。也可以用name来找到。</p></blockquote>\n<p>引申问题： Resource和Autowire的区别？</p>\n<h2 id=\"LC11-注解开发\"><a href=\"#LC11-注解开发\" class=\"headerlink\" title=\"LC11 注解开发\"></a>LC11 注解开发</h2><p>关键字：@ component</p>\n<p>在spring4之后，需要导入aop包，来开启注解开发。</p>\n<div class=\"language-txt\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">txt</span><pre class=\"shiki rose-pine-moon\" style=\"background-color: #232136\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #e0def4\">spring-aop</span></span></code></pre></div><p>流程：</p>\n<ol>\n<li><div class=\"language-xml\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">xml</span><pre class=\"shiki rose-pine-moon\" style=\"background-color: #232136\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #E0DEF4\"> </span><span style=\"color: #6E6A86\">&lt;</span><span style=\"color: #9CCFD8\">context</span><span style=\"color: #908CAA\">:</span><span style=\"color: #9CCFD8\">annotation-config</span><span style=\"color: #6E6A86\">&gt;</span><span style=\"color: #E0DEF4\"> </span></span>\n<span class=\"line\"><span style=\"color: #E0DEF4\"> </span></span></code></pre></div></li>\n<li><div class=\"language-xml\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">xml</span><pre class=\"shiki rose-pine-moon\" style=\"background-color: #232136\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #E0DEF4\"> </span><span style=\"color: #6E6A86\">&lt;</span><span style=\"color: #9CCFD8\">context</span><span style=\"color: #908CAA\">:</span><span style=\"color: #9CCFD8\">component-scan</span><span style=\"color: #E0DEF4\"> </span><span style=\"color: #C4A7E7; font-style: italic\">base-package</span><span style=\"color: #E0DEF4\">=</span><span style=\"color: #F6C177\">&quot;com.example.xxx&quot;</span><span style=\"color: #6E6A86\">&gt;</span></span>\n<span class=\"line\"><span style=\"color: #E0DEF4\"> </span><span style=\"color: #908CAA; font-style: italic\">&lt;!--</span><span style=\"color: #6E6A86; font-style: italic\">这里 base-package是指定要扫描的包。这个包下的所有注解都会生效</span><span style=\"color: #908CAA; font-style: italic\">--&gt;</span></span></code></pre></div></li>\n</ol>\n<p>@component 挂在类上，代表这个类被spring管理了</p>\n<p>@Value挂在变量上面，代表这个变量的值</p>\n<div class=\"language-java\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">java</span><pre class=\"shiki rose-pine-moon\" style=\"background-color: #232136\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #908CAA\">@</span><span style=\"color: #3E8FB0\">Value</span><span style=\"color: #908CAA\">(</span><span style=\"color: #F6C177\">&quot;anicaa&quot;</span><span style=\"color: #908CAA\">)</span></span>\n<span class=\"line\"><span style=\"color: #3E8FB0\">private</span><span style=\"color: #E0DEF4\"> </span><span style=\"color: #3E8FB0\">String</span><span style=\"color: #E0DEF4\"> </span><span style=\"color: #E0DEF4; font-style: italic\">name</span><span style=\"color: #908CAA\">;</span></span></code></pre></div><ul>\n<li><p>也可以挂在set方法上。同理</p>\n<div class=\"language-java\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">java</span><pre class=\"shiki rose-pine-moon\" style=\"background-color: #232136\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #908CAA\">@</span><span style=\"color: #3E8FB0\">Value</span><span style=\"color: #908CAA\">(</span><span style=\"color: #F6C177\">&quot;anicaa&quot;</span><span style=\"color: #908CAA\">)</span></span>\n<span class=\"line\"><span style=\"color: #3E8FB0\">public</span><span style=\"color: #E0DEF4\"> </span><span style=\"color: #3E8FB0\">void</span><span style=\"color: #E0DEF4\"> </span><span style=\"color: #EA9A97\">setName</span><span style=\"color: #908CAA\">(</span><span style=\"color: #3E8FB0\">String</span><span style=\"color: #E0DEF4\"> name</span><span style=\"color: #908CAA\">)&#123;</span></span>\n<span class=\"line\"><span style=\"color: #E0DEF4\">    </span><span style=\"color: #E0DEF4; font-style: italic\">this</span><span style=\"color: #908CAA\">.</span><span style=\"color: #E0DEF4; font-style: italic\">name</span><span style=\"color: #E0DEF4\"> </span><span style=\"color: #3E8FB0\">=</span><span style=\"color: #E0DEF4\"> name</span><span style=\"color: #908CAA\">;</span></span>\n<span class=\"line\"><span style=\"color: #908CAA\">&#125;</span></span></code></pre></div></li>\n</ul>\n<p>@Scope，就是决定单例，多例的注解。同样挂在类上。</p>\n<div class=\"language-java\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">java</span><pre class=\"shiki rose-pine-moon\" style=\"background-color: #232136\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #908CAA\">@</span><span style=\"color: #3E8FB0\">Scope</span><span style=\"color: #908CAA\">(</span><span style=\"color: #F6C177\">&quot;prototype&quot;</span><span style=\"color: #908CAA\">)</span></span>\n<span class=\"line\"><span style=\"color: #908CAA\">@</span><span style=\"color: #3E8FB0\">Scope</span><span style=\"color: #908CAA\">(</span><span style=\"color: #F6C177\">&quot;singleton&quot;</span><span style=\"color: #908CAA\">)</span></span></code></pre></div><h3 id=\"components注解的衍生\"><a href=\"#components注解的衍生\" class=\"headerlink\" title=\"@components注解的衍生\"></a>@components注解的衍生</h3><blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>在web开发中，我们会按照model-view-controller三层架构来分层。</p>\n<ol>\n<li>dao层</li>\n<li>service层</li>\n<li>controller层</li>\n</ol>\n<p><strong>每层的注解都是特种的。dao 是 @Repository, serivce是 @Service, controller 是 @Controller。</strong></p></blockquote>\n<h2 id=\"LC12-使用纯Java配置Spring\"><a href=\"#LC12-使用纯Java配置Spring\" class=\"headerlink\" title=\"LC12. 使用纯Java配置Spring\"></a>LC12. 使用纯Java配置Spring</h2><blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>旨在离开xml配置，只使用java就能完成配置。</p></blockquote>\n<div class=\"language-java\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">java</span><pre class=\"shiki rose-pine-moon\" style=\"background-color: #232136\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #908CAA; font-style: italic\">//</span><span style=\"color: #6E6A86; font-style: italic\">UserConfig类</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #3E8FB0\">package</span><span style=\"color: #E0DEF4\"> </span><span style=\"color: #3E8FB0\">com</span><span style=\"color: #908CAA\">.</span><span style=\"color: #3E8FB0\">example</span><span style=\"color: #908CAA\">.</span><span style=\"color: #3E8FB0\">config</span><span style=\"color: #908CAA\">;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #3E8FB0\">import com</span><span style=\"color: #908CAA\">.</span><span style=\"color: #3E8FB0\">example</span><span style=\"color: #908CAA\">.</span><span style=\"color: #3E8FB0\">pojo</span><span style=\"color: #908CAA\">.</span><span style=\"color: #3E8FB0\">User</span><span style=\"color: #908CAA\">;</span></span>\n<span class=\"line\"><span style=\"color: #3E8FB0\">import org</span><span style=\"color: #908CAA\">.</span><span style=\"color: #3E8FB0\">springframework</span><span style=\"color: #908CAA\">.</span><span style=\"color: #3E8FB0\">context</span><span style=\"color: #908CAA\">.</span><span style=\"color: #3E8FB0\">annotation</span><span style=\"color: #908CAA\">.</span><span style=\"color: #3E8FB0\">Bean</span><span style=\"color: #908CAA\">;</span></span>\n<span class=\"line\"><span style=\"color: #3E8FB0\">import org</span><span style=\"color: #908CAA\">.</span><span style=\"color: #3E8FB0\">springframework</span><span style=\"color: #908CAA\">.</span><span style=\"color: #3E8FB0\">context</span><span style=\"color: #908CAA\">.</span><span style=\"color: #3E8FB0\">annotation</span><span style=\"color: #908CAA\">.</span><span style=\"color: #3E8FB0\">Configuration</span><span style=\"color: #908CAA\">;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #908CAA\">@</span><span style=\"color: #3E8FB0\">Configuration</span></span>\n<span class=\"line\"><span style=\"color: #3E8FB0\">public</span><span style=\"color: #E0DEF4\"> </span><span style=\"color: #3E8FB0\">class</span><span style=\"color: #E0DEF4\"> </span><span style=\"color: #9CCFD8\">UserConfig</span><span style=\"color: #E0DEF4\"> </span><span style=\"color: #908CAA\">&#123;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #E0DEF4\">    </span><span style=\"color: #908CAA\">@</span><span style=\"color: #3E8FB0\">Bean</span></span>\n<span class=\"line\"><span style=\"color: #E0DEF4\">    </span><span style=\"color: #3E8FB0\">public</span><span style=\"color: #E0DEF4\"> </span><span style=\"color: #3E8FB0\">User</span><span style=\"color: #E0DEF4\"> </span><span style=\"color: #EA9A97\">getUser</span><span style=\"color: #908CAA\">()&#123;</span></span>\n<span class=\"line\"><span style=\"color: #E0DEF4\">        </span><span style=\"color: #3E8FB0\">return</span><span style=\"color: #E0DEF4\"> </span><span style=\"color: #3E8FB0\">new</span><span style=\"color: #E0DEF4\"> </span><span style=\"color: #EA9A97\">User</span><span style=\"color: #908CAA\">();</span></span>\n<span class=\"line\"><span style=\"color: #E0DEF4\">    </span><span style=\"color: #908CAA\">&#125;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #908CAA\">&#125;</span></span>\n<span class=\"line\"></span></code></pre></div><div class=\"language-java\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">java</span><pre class=\"shiki rose-pine-moon\" style=\"background-color: #232136\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #908CAA; font-style: italic\">//</span><span style=\"color: #6E6A86; font-style: italic\">User类</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #3E8FB0\">package</span><span style=\"color: #E0DEF4\"> </span><span style=\"color: #3E8FB0\">com</span><span style=\"color: #908CAA\">.</span><span style=\"color: #3E8FB0\">example</span><span style=\"color: #908CAA\">.</span><span style=\"color: #3E8FB0\">pojo</span><span style=\"color: #908CAA\">;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #3E8FB0\">import org</span><span style=\"color: #908CAA\">.</span><span style=\"color: #3E8FB0\">springframework</span><span style=\"color: #908CAA\">.</span><span style=\"color: #3E8FB0\">beans</span><span style=\"color: #908CAA\">.</span><span style=\"color: #3E8FB0\">factory</span><span style=\"color: #908CAA\">.</span><span style=\"color: #3E8FB0\">annotation</span><span style=\"color: #908CAA\">.</span><span style=\"color: #3E8FB0\">Value</span><span style=\"color: #908CAA\">;</span></span>\n<span class=\"line\"><span style=\"color: #3E8FB0\">import org</span><span style=\"color: #908CAA\">.</span><span style=\"color: #3E8FB0\">springframework</span><span style=\"color: #908CAA\">.</span><span style=\"color: #3E8FB0\">stereotype</span><span style=\"color: #908CAA\">.</span><span style=\"color: #3E8FB0\">Component</span><span style=\"color: #908CAA\">;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #908CAA\">@</span><span style=\"color: #3E8FB0\">Component</span></span>\n<span class=\"line\"><span style=\"color: #3E8FB0\">public</span><span style=\"color: #E0DEF4\"> </span><span style=\"color: #3E8FB0\">class</span><span style=\"color: #E0DEF4\"> </span><span style=\"color: #9CCFD8\">User</span><span style=\"color: #E0DEF4\"> </span><span style=\"color: #908CAA\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #E0DEF4\">    </span><span style=\"color: #908CAA\">@</span><span style=\"color: #3E8FB0\">Value</span><span style=\"color: #908CAA\">(</span><span style=\"color: #F6C177\">&quot;anicaa&quot;</span><span style=\"color: #908CAA\">)</span></span>\n<span class=\"line\"><span style=\"color: #E0DEF4\">    </span><span style=\"color: #3E8FB0\">private</span><span style=\"color: #E0DEF4\"> </span><span style=\"color: #3E8FB0\">String</span><span style=\"color: #E0DEF4\"> </span><span style=\"color: #E0DEF4; font-style: italic\">name</span><span style=\"color: #908CAA\">;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #E0DEF4\">    </span><span style=\"color: #3E8FB0\">public</span><span style=\"color: #E0DEF4\"> </span><span style=\"color: #3E8FB0\">String</span><span style=\"color: #E0DEF4\"> </span><span style=\"color: #EA9A97\">getName</span><span style=\"color: #908CAA\">()&#123;</span></span>\n<span class=\"line\"><span style=\"color: #E0DEF4\">        </span><span style=\"color: #3E8FB0\">return</span><span style=\"color: #E0DEF4\"> </span><span style=\"color: #E0DEF4; font-style: italic\">this</span><span style=\"color: #908CAA\">.</span><span style=\"color: #E0DEF4; font-style: italic\">name</span><span style=\"color: #908CAA\">;</span></span>\n<span class=\"line\"><span style=\"color: #E0DEF4\">    </span><span style=\"color: #908CAA\">&#125;</span></span>\n<span class=\"line\"><span style=\"color: #908CAA\">&#125;</span></span>\n<span class=\"line\"></span></code></pre></div><div class=\"language-java\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">java</span><pre class=\"shiki rose-pine-moon\" style=\"background-color: #232136\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #E0DEF4\">测试代码</span></span>\n<span class=\"line\"><span style=\"color: #3E8FB0\">package</span><span style=\"color: #E0DEF4\"> </span><span style=\"color: #3E8FB0\">com</span><span style=\"color: #908CAA\">.</span><span style=\"color: #3E8FB0\">example</span><span style=\"color: #908CAA\">.</span><span style=\"color: #3E8FB0\">springconfig</span><span style=\"color: #908CAA\">;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #3E8FB0\">import com</span><span style=\"color: #908CAA\">.</span><span style=\"color: #3E8FB0\">example</span><span style=\"color: #908CAA\">.</span><span style=\"color: #3E8FB0\">config</span><span style=\"color: #908CAA\">.</span><span style=\"color: #3E8FB0\">UserConfig</span><span style=\"color: #908CAA\">;</span></span>\n<span class=\"line\"><span style=\"color: #3E8FB0\">import com</span><span style=\"color: #908CAA\">.</span><span style=\"color: #3E8FB0\">example</span><span style=\"color: #908CAA\">.</span><span style=\"color: #3E8FB0\">pojo</span><span style=\"color: #908CAA\">.</span><span style=\"color: #3E8FB0\">User</span><span style=\"color: #908CAA\">;</span></span>\n<span class=\"line\"><span style=\"color: #3E8FB0\">import org</span><span style=\"color: #908CAA\">.</span><span style=\"color: #3E8FB0\">springframework</span><span style=\"color: #908CAA\">.</span><span style=\"color: #3E8FB0\">boot</span><span style=\"color: #908CAA\">.</span><span style=\"color: #3E8FB0\">SpringApplication</span><span style=\"color: #908CAA\">;</span></span>\n<span class=\"line\"><span style=\"color: #3E8FB0\">import org</span><span style=\"color: #908CAA\">.</span><span style=\"color: #3E8FB0\">springframework</span><span style=\"color: #908CAA\">.</span><span style=\"color: #3E8FB0\">boot</span><span style=\"color: #908CAA\">.</span><span style=\"color: #3E8FB0\">autoconfigure</span><span style=\"color: #908CAA\">.</span><span style=\"color: #3E8FB0\">SpringBootApplication</span><span style=\"color: #908CAA\">;</span></span>\n<span class=\"line\"><span style=\"color: #3E8FB0\">import org</span><span style=\"color: #908CAA\">.</span><span style=\"color: #3E8FB0\">springframework</span><span style=\"color: #908CAA\">.</span><span style=\"color: #3E8FB0\">context</span><span style=\"color: #908CAA\">.</span><span style=\"color: #3E8FB0\">ApplicationContext</span><span style=\"color: #908CAA\">;</span></span>\n<span class=\"line\"><span style=\"color: #3E8FB0\">import org</span><span style=\"color: #908CAA\">.</span><span style=\"color: #3E8FB0\">springframework</span><span style=\"color: #908CAA\">.</span><span style=\"color: #3E8FB0\">context</span><span style=\"color: #908CAA\">.</span><span style=\"color: #3E8FB0\">annotation</span><span style=\"color: #908CAA\">.</span><span style=\"color: #3E8FB0\">AnnotationConfigApplicationContext</span><span style=\"color: #908CAA\">;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #3E8FB0\">public</span><span style=\"color: #E0DEF4\"> </span><span style=\"color: #3E8FB0\">class</span><span style=\"color: #E0DEF4\"> </span><span style=\"color: #9CCFD8\">SpringConfigApplication</span><span style=\"color: #E0DEF4\"> </span><span style=\"color: #908CAA\">&#123;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #E0DEF4\">    </span><span style=\"color: #3E8FB0\">public</span><span style=\"color: #E0DEF4\"> </span><span style=\"color: #3E8FB0\">static</span><span style=\"color: #E0DEF4\"> </span><span style=\"color: #3E8FB0\">void</span><span style=\"color: #E0DEF4\"> </span><span style=\"color: #EA9A97\">main</span><span style=\"color: #908CAA\">(</span><span style=\"color: #3E8FB0\">String</span><span style=\"color: #908CAA\">[]</span><span style=\"color: #E0DEF4\"> </span><span style=\"color: #C4A7E7; font-style: italic\">args</span><span style=\"color: #908CAA\">)</span><span style=\"color: #E0DEF4\"> </span><span style=\"color: #908CAA\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #E0DEF4\">        </span><span style=\"color: #3E8FB0\">ApplicationContext</span><span style=\"color: #E0DEF4\"> </span><span style=\"color: #E0DEF4; font-style: italic\">applicationContext</span><span style=\"color: #E0DEF4\"> </span><span style=\"color: #3E8FB0\">=</span><span style=\"color: #E0DEF4\"> </span><span style=\"color: #3E8FB0\">new</span><span style=\"color: #E0DEF4\"> </span><span style=\"color: #EA9A97\">AnnotationConfigApplicationContext</span><span style=\"color: #908CAA\">(</span><span style=\"color: #E0DEF4; font-style: italic\">UserConfig</span><span style=\"color: #908CAA\">.</span><span style=\"color: #E0DEF4; font-style: italic\">class</span><span style=\"color: #908CAA\">);</span></span>\n<span class=\"line\"><span style=\"color: #E0DEF4\">        </span><span style=\"color: #3E8FB0\">User</span><span style=\"color: #E0DEF4\"> </span><span style=\"color: #E0DEF4; font-style: italic\">user</span><span style=\"color: #E0DEF4\"> </span><span style=\"color: #3E8FB0\">=</span><span style=\"color: #E0DEF4\"> </span><span style=\"color: #908CAA\">(</span><span style=\"color: #E0DEF4\">User</span><span style=\"color: #908CAA\">)</span><span style=\"color: #E0DEF4\"> </span><span style=\"color: #E0DEF4; font-style: italic\">applicationContext</span><span style=\"color: #908CAA\">.</span><span style=\"color: #EA9A97\">getBean</span><span style=\"color: #908CAA\">(</span><span style=\"color: #F6C177\">&quot;getUser&quot;</span><span style=\"color: #908CAA\">);</span></span>\n<span class=\"line\"><span style=\"color: #E0DEF4\">        </span><span style=\"color: #E0DEF4; font-style: italic\">System</span><span style=\"color: #908CAA\">.</span><span style=\"color: #E0DEF4; font-style: italic\">out</span><span style=\"color: #908CAA\">.</span><span style=\"color: #EA9A97\">println</span><span style=\"color: #908CAA\">(</span><span style=\"color: #E0DEF4; font-style: italic\">user</span><span style=\"color: #908CAA\">.</span><span style=\"color: #EA9A97\">getName</span><span style=\"color: #908CAA\">());</span></span>\n<span class=\"line\"><span style=\"color: #E0DEF4\">    </span><span style=\"color: #908CAA\">&#125;</span></span>\n<span class=\"line\"><span style=\"color: #908CAA\">&#125;</span></span>\n<span class=\"line\"></span></code></pre></div><ul>\n<li><p>挂在方法上的@Bean, 其方法名就是bean id。返回值就是Bean class.</p>\n</li>\n<li><p>@ComponentScan(“com.exmaple.xxx”). 挂在config类头上，就是扫描。</p>\n</li>\n<li><p>@Import() 导入别的config类.</p>\n</li>\n</ul>\n<h2 id=\"LC13-AOP\"><a href=\"#LC13-AOP\" class=\"headerlink\" title=\"LC13. AOP\"></a>LC13. AOP</h2><blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>Spring中比较重要的模式： 代理模式 和 工厂模式</p></blockquote>\n<h3 id=\"设计模式-代理模式（AOP底层）\"><a href=\"#设计模式-代理模式（AOP底层）\" class=\"headerlink\" title=\"设计模式-代理模式（AOP底层）\"></a>设计模式-代理模式（AOP底层）</h3><h4 id=\"1-静态代理\"><a href=\"#1-静态代理\" class=\"headerlink\" title=\"1. 静态代理\"></a>1. 静态代理</h4><blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>静态代理的<strong>静态</strong>，体现在他的代理是被“写死的“。以UserService以及其接口的实现类为例</p></blockquote>\n<ol>\n<li>User Service接口</li>\n</ol>\n<div class=\"language-java\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">java</span><pre class=\"shiki rose-pine-moon\" style=\"background-color: #232136\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #3E8FB0\">package</span><span style=\"color: #E0DEF4\"> </span><span style=\"color: #3E8FB0\">com</span><span style=\"color: #908CAA\">.</span><span style=\"color: #3E8FB0\">example</span><span style=\"color: #908CAA\">.</span><span style=\"color: #3E8FB0\">test</span><span style=\"color: #908CAA\">;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #3E8FB0\">public</span><span style=\"color: #E0DEF4\"> </span><span style=\"color: #3E8FB0\">interface</span><span style=\"color: #E0DEF4\"> </span><span style=\"color: #9CCFD8\">UserService</span><span style=\"color: #E0DEF4\"> </span><span style=\"color: #908CAA\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #E0DEF4\">    </span><span style=\"color: #3E8FB0\">public</span><span style=\"color: #E0DEF4\"> </span><span style=\"color: #3E8FB0\">void</span><span style=\"color: #E0DEF4\"> </span><span style=\"color: #EA9A97\">add</span><span style=\"color: #908CAA\">();</span></span>\n<span class=\"line\"><span style=\"color: #E0DEF4\">    </span><span style=\"color: #3E8FB0\">public</span><span style=\"color: #E0DEF4\"> </span><span style=\"color: #3E8FB0\">void</span><span style=\"color: #E0DEF4\"> </span><span style=\"color: #EA9A97\">delete</span><span style=\"color: #908CAA\">();</span></span>\n<span class=\"line\"><span style=\"color: #E0DEF4\">    </span><span style=\"color: #3E8FB0\">public</span><span style=\"color: #E0DEF4\"> </span><span style=\"color: #3E8FB0\">void</span><span style=\"color: #E0DEF4\"> </span><span style=\"color: #EA9A97\">query</span><span style=\"color: #908CAA\">();</span></span>\n<span class=\"line\"><span style=\"color: #E0DEF4\">    </span><span style=\"color: #3E8FB0\">public</span><span style=\"color: #E0DEF4\"> </span><span style=\"color: #3E8FB0\">void</span><span style=\"color: #E0DEF4\"> </span><span style=\"color: #EA9A97\">update</span><span style=\"color: #908CAA\">();</span></span>\n<span class=\"line\"><span style=\"color: #908CAA\">&#125;</span></span>\n<span class=\"line\"></span></code></pre></div><ol start=\"2\">\n<li>UserServiceImpl 实现类</li>\n</ol>\n<div class=\"language-java\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">java</span><pre class=\"shiki rose-pine-moon\" style=\"background-color: #232136\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #3E8FB0\">package</span><span style=\"color: #E0DEF4\"> </span><span style=\"color: #3E8FB0\">com</span><span style=\"color: #908CAA\">.</span><span style=\"color: #3E8FB0\">example</span><span style=\"color: #908CAA\">.</span><span style=\"color: #3E8FB0\">test</span><span style=\"color: #908CAA\">;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #3E8FB0\">public</span><span style=\"color: #E0DEF4\"> </span><span style=\"color: #3E8FB0\">class</span><span style=\"color: #E0DEF4\"> </span><span style=\"color: #9CCFD8\">UserServiceImpl</span><span style=\"color: #E0DEF4\"> </span><span style=\"color: #3E8FB0\">implements</span><span style=\"color: #E0DEF4\"> </span><span style=\"color: #C4A7E7; font-style: italic\">UserService</span><span style=\"color: #908CAA\">&#123;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #E0DEF4\">    </span><span style=\"color: #908CAA\">@</span><span style=\"color: #3E8FB0\">Override</span></span>\n<span class=\"line\"><span style=\"color: #E0DEF4\">    </span><span style=\"color: #3E8FB0\">public</span><span style=\"color: #E0DEF4\"> </span><span style=\"color: #3E8FB0\">void</span><span style=\"color: #E0DEF4\"> </span><span style=\"color: #EA9A97\">add</span><span style=\"color: #908CAA\">()</span><span style=\"color: #E0DEF4\"> </span><span style=\"color: #908CAA\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #E0DEF4\">        </span><span style=\"color: #E0DEF4; font-style: italic\">System</span><span style=\"color: #908CAA\">.</span><span style=\"color: #E0DEF4; font-style: italic\">out</span><span style=\"color: #908CAA\">.</span><span style=\"color: #EA9A97\">println</span><span style=\"color: #908CAA\">(</span><span style=\"color: #F6C177\">&quot;添加了&quot;</span><span style=\"color: #908CAA\">);</span></span>\n<span class=\"line\"><span style=\"color: #E0DEF4\">    </span><span style=\"color: #908CAA\">&#125;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #E0DEF4\">    </span><span style=\"color: #908CAA\">@</span><span style=\"color: #3E8FB0\">Override</span></span>\n<span class=\"line\"><span style=\"color: #E0DEF4\">    </span><span style=\"color: #3E8FB0\">public</span><span style=\"color: #E0DEF4\"> </span><span style=\"color: #3E8FB0\">void</span><span style=\"color: #E0DEF4\"> </span><span style=\"color: #EA9A97\">delete</span><span style=\"color: #908CAA\">()</span><span style=\"color: #E0DEF4\"> </span><span style=\"color: #908CAA\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #E0DEF4\">        </span><span style=\"color: #E0DEF4; font-style: italic\">System</span><span style=\"color: #908CAA\">.</span><span style=\"color: #E0DEF4; font-style: italic\">out</span><span style=\"color: #908CAA\">.</span><span style=\"color: #EA9A97\">println</span><span style=\"color: #908CAA\">(</span><span style=\"color: #F6C177\">&quot;删除了&quot;</span><span style=\"color: #908CAA\">);</span></span>\n<span class=\"line\"><span style=\"color: #E0DEF4\">    </span><span style=\"color: #908CAA\">&#125;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #E0DEF4\">    </span><span style=\"color: #908CAA\">@</span><span style=\"color: #3E8FB0\">Override</span></span>\n<span class=\"line\"><span style=\"color: #E0DEF4\">    </span><span style=\"color: #3E8FB0\">public</span><span style=\"color: #E0DEF4\"> </span><span style=\"color: #3E8FB0\">void</span><span style=\"color: #E0DEF4\"> </span><span style=\"color: #EA9A97\">query</span><span style=\"color: #908CAA\">()</span><span style=\"color: #E0DEF4\"> </span><span style=\"color: #908CAA\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #E0DEF4\">        </span><span style=\"color: #E0DEF4; font-style: italic\">System</span><span style=\"color: #908CAA\">.</span><span style=\"color: #E0DEF4; font-style: italic\">out</span><span style=\"color: #908CAA\">.</span><span style=\"color: #EA9A97\">println</span><span style=\"color: #908CAA\">(</span><span style=\"color: #F6C177\">&quot;查询了&quot;</span><span style=\"color: #908CAA\">);</span></span>\n<span class=\"line\"><span style=\"color: #E0DEF4\">    </span><span style=\"color: #908CAA\">&#125;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #E0DEF4\">    </span><span style=\"color: #908CAA\">@</span><span style=\"color: #3E8FB0\">Override</span></span>\n<span class=\"line\"><span style=\"color: #E0DEF4\">    </span><span style=\"color: #3E8FB0\">public</span><span style=\"color: #E0DEF4\"> </span><span style=\"color: #3E8FB0\">void</span><span style=\"color: #E0DEF4\"> </span><span style=\"color: #EA9A97\">update</span><span style=\"color: #908CAA\">()</span><span style=\"color: #E0DEF4\"> </span><span style=\"color: #908CAA\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #E0DEF4\">        </span><span style=\"color: #E0DEF4; font-style: italic\">System</span><span style=\"color: #908CAA\">.</span><span style=\"color: #E0DEF4; font-style: italic\">out</span><span style=\"color: #908CAA\">.</span><span style=\"color: #EA9A97\">println</span><span style=\"color: #908CAA\">(</span><span style=\"color: #F6C177\">&quot;更新了&quot;</span><span style=\"color: #908CAA\">);</span></span>\n<span class=\"line\"><span style=\"color: #E0DEF4\">    </span><span style=\"color: #908CAA\">&#125;</span></span>\n<span class=\"line\"><span style=\"color: #908CAA\">&#125;</span></span>\n<span class=\"line\"></span></code></pre></div><ol start=\"3\">\n<li>UserServiceProxy 静态代理类。</li>\n</ol>\n<div class=\"language-txt\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">txt</span><pre class=\"shiki rose-pine-moon\" style=\"background-color: #232136\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #e0def4\">package com.example.test;</span></span>\n<span class=\"line\"><span style=\"color: #e0def4\"></span></span>\n<span class=\"line\"><span style=\"color: #e0def4\">import com.example.pojo.User;</span></span>\n<span class=\"line\"><span style=\"color: #e0def4\"></span></span>\n<span class=\"line\"><span style=\"color: #e0def4\">public class UserServiceProxy implements UserService &#123;</span></span>\n<span class=\"line\"><span style=\"color: #e0def4\">    private UserServiceImpl userService;</span></span>\n<span class=\"line\"><span style=\"color: #e0def4\"></span></span>\n<span class=\"line\"><span style=\"color: #e0def4\">    public UserServiceProxy()&#123;</span></span>\n<span class=\"line\"><span style=\"color: #e0def4\"></span></span>\n<span class=\"line\"><span style=\"color: #e0def4\">    &#125;</span></span>\n<span class=\"line\"><span style=\"color: #e0def4\"></span></span>\n<span class=\"line\"><span style=\"color: #e0def4\">    public UserServiceProxy(UserServiceImpl userService)&#123;</span></span>\n<span class=\"line\"><span style=\"color: #e0def4\">        this.userService = userService;</span></span>\n<span class=\"line\"><span style=\"color: #e0def4\">    &#125;</span></span>\n<span class=\"line\"><span style=\"color: #e0def4\"></span></span>\n<span class=\"line\"><span style=\"color: #e0def4\">    @Override</span></span>\n<span class=\"line\"><span style=\"color: #e0def4\">    public void add() &#123;</span></span>\n<span class=\"line\"><span style=\"color: #e0def4\">        log(&quot;add&quot;);</span></span>\n<span class=\"line\"><span style=\"color: #e0def4\">        userService.add();</span></span>\n<span class=\"line\"><span style=\"color: #e0def4\">    &#125;</span></span>\n<span class=\"line\"><span style=\"color: #e0def4\"></span></span>\n<span class=\"line\"><span style=\"color: #e0def4\">    @Override</span></span>\n<span class=\"line\"><span style=\"color: #e0def4\">    public void delete() &#123;</span></span>\n<span class=\"line\"><span style=\"color: #e0def4\">        log(&quot;delete&quot;);</span></span>\n<span class=\"line\"><span style=\"color: #e0def4\">        userService.delete();</span></span>\n<span class=\"line\"><span style=\"color: #e0def4\">    &#125;</span></span>\n<span class=\"line\"><span style=\"color: #e0def4\"></span></span>\n<span class=\"line\"><span style=\"color: #e0def4\">    @Override</span></span>\n<span class=\"line\"><span style=\"color: #e0def4\">    public void query() &#123;</span></span>\n<span class=\"line\"><span style=\"color: #e0def4\">        log(&quot;query&quot;);</span></span>\n<span class=\"line\"><span style=\"color: #e0def4\">        userService.query();</span></span>\n<span class=\"line\"><span style=\"color: #e0def4\">    &#125;</span></span>\n<span class=\"line\"><span style=\"color: #e0def4\"></span></span>\n<span class=\"line\"><span style=\"color: #e0def4\">    @Override</span></span>\n<span class=\"line\"><span style=\"color: #e0def4\">    public void update() &#123;</span></span>\n<span class=\"line\"><span style=\"color: #e0def4\">        log(&quot;update&quot;);</span></span>\n<span class=\"line\"><span style=\"color: #e0def4\">        userService.update();</span></span>\n<span class=\"line\"><span style=\"color: #e0def4\">    &#125;</span></span>\n<span class=\"line\"><span style=\"color: #e0def4\"></span></span>\n<span class=\"line\"><span style=\"color: #e0def4\">    public void log(String str)&#123;</span></span>\n<span class=\"line\"><span style=\"color: #e0def4\">        System.out.println(&quot;call &quot; + str);</span></span>\n<span class=\"line\"><span style=\"color: #e0def4\">    &#125;</span></span>\n<span class=\"line\"><span style=\"color: #e0def4\">&#125;</span></span>\n<span class=\"line\"><span style=\"color: #e0def4\"></span></span></code></pre></div><p>4.Client 类. 调用了代理，执行接口的放法。</p>\n<div class=\"language-txt\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">txt</span><pre class=\"shiki rose-pine-moon\" style=\"background-color: #232136\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #e0def4\">package com.example.test;</span></span>\n<span class=\"line\"><span style=\"color: #e0def4\"></span></span>\n<span class=\"line\"><span style=\"color: #e0def4\">public class Client &#123;</span></span>\n<span class=\"line\"><span style=\"color: #e0def4\">    public static void main(String[] args) &#123;</span></span>\n<span class=\"line\"><span style=\"color: #e0def4\">        UserServiceImpl userService = new UserServiceImpl();</span></span>\n<span class=\"line\"><span style=\"color: #e0def4\">        UserServiceProxy userServiceProxy = new UserServiceProxy(userService);</span></span>\n<span class=\"line\"><span style=\"color: #e0def4\">        userServiceProxy.add();</span></span>\n<span class=\"line\"><span style=\"color: #e0def4\">        userServiceProxy.delete();</span></span>\n<span class=\"line\"><span style=\"color: #e0def4\">        userServiceProxy.query();</span></span>\n<span class=\"line\"><span style=\"color: #e0def4\">        userServiceProxy.update();</span></span>\n<span class=\"line\"><span style=\"color: #e0def4\">    &#125;</span></span>\n<span class=\"line\"><span style=\"color: #e0def4\">&#125;</span></span>\n<span class=\"line\"><span style=\"color: #e0def4\"></span></span></code></pre></div><p>在这里, 写死体现在了静态代理类中的log方法。这种需要经常改动的类，可以通过InvocationHandler来实现动态的改动。</p>\n<h4 id=\"2-动态代理\"><a href=\"#2-动态代理\" class=\"headerlink\" title=\"2. 动态代理\"></a>2. 动态代理</h4><blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>而动态代理的作用就在于，不需要申明一个代理类。只需一个InvocationHandler就可以作为模板，动态的代理多个接口。</p>\n<p>在代理模式中，接口可以被看作是房东。而接口的实现类，以及实现类中的方法，就是房东的房子里的房间。</p>\n<p>原先，我们需要创建一个静态代理类，来管理这些实现类，以及调用实现类中的方法。这就像是房东找了中介来出租房子里的每个房间。</p>\n<p>现在，通过动态代理。我们可以直接把房子交给中介。也就是把实现类交给InvocationHandler</p>\n<div class=\"language-java\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">java</span><pre class=\"shiki rose-pine-moon\" style=\"background-color: #232136\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #EA9A97\">setTarget</span><span style=\"color: #908CAA\">(</span><span style=\"color: #3E8FB0\">Object</span><span style=\"color: #E0DEF4\"> target</span><span style=\"color: #908CAA\">)</span></span></code></pre></div><p>就能设定需要代理的接口。InvocationHandler会通过反射，找到实现类<strong>所对应的接口</strong>，并把这个接口返回给我们。<br>之后，Client可以直接通过这个返回来的对象调用其方法，实现代理。</p></blockquote>\n<ol>\n<li>InvocationHandler</li>\n</ol>\n<div class=\"language-txt\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">txt</span><pre class=\"shiki rose-pine-moon\" style=\"background-color: #232136\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #e0def4\">package com.example.test;</span></span>\n<span class=\"line\"><span style=\"color: #e0def4\"></span></span>\n<span class=\"line\"><span style=\"color: #e0def4\">import java.lang.reflect.InvocationHandler;</span></span>\n<span class=\"line\"><span style=\"color: #e0def4\">import java.lang.reflect.Method;</span></span>\n<span class=\"line\"><span style=\"color: #e0def4\">import java.lang.reflect.Proxy;</span></span>\n<span class=\"line\"><span style=\"color: #e0def4\"></span></span>\n<span class=\"line\"><span style=\"color: #e0def4\">public class UserServiceInvocationHandler implements InvocationHandler &#123;</span></span>\n<span class=\"line\"><span style=\"color: #e0def4\">    //被代理的对象</span></span>\n<span class=\"line\"><span style=\"color: #e0def4\">    private Object target;</span></span>\n<span class=\"line\"><span style=\"color: #e0def4\"></span></span>\n<span class=\"line\"><span style=\"color: #e0def4\">    //获取代理对象</span></span>\n<span class=\"line\"><span style=\"color: #e0def4\">    public Object getProxy()&#123;</span></span>\n<span class=\"line\"><span style=\"color: #e0def4\">        return Proxy.newProxyInstance(this.getClass().getClassLoader(), target.getClass().getInterfaces(),this);</span></span>\n<span class=\"line\"><span style=\"color: #e0def4\">    &#125;</span></span>\n<span class=\"line\"><span style=\"color: #e0def4\"></span></span>\n<span class=\"line\"><span style=\"color: #e0def4\">    public void setTarget(Object target)&#123;</span></span>\n<span class=\"line\"><span style=\"color: #e0def4\">        this.target = target;</span></span>\n<span class=\"line\"><span style=\"color: #e0def4\">    &#125;</span></span>\n<span class=\"line\"><span style=\"color: #e0def4\">    </span></span>\n<span class=\"line\"><span style=\"color: #e0def4\">    //代理对象以及代理调用方法时候，都会invoke这个</span></span>\n<span class=\"line\"><span style=\"color: #e0def4\">    @Override</span></span>\n<span class=\"line\"><span style=\"color: #e0def4\">    public Object invoke(Object proxy, Method method, Object[] args) throws Throwable &#123;</span></span>\n<span class=\"line\"><span style=\"color: #e0def4\">        log(method.getName());</span></span>\n<span class=\"line\"><span style=\"color: #e0def4\">        return method.invoke(target, args);</span></span>\n<span class=\"line\"><span style=\"color: #e0def4\">    &#125;</span></span>\n<span class=\"line\"><span style=\"color: #e0def4\"></span></span>\n<span class=\"line\"><span style=\"color: #e0def4\">    private void log(String msg)&#123;</span></span>\n<span class=\"line\"><span style=\"color: #e0def4\">        System.out.println(&quot;Calling&quot; + msg);</span></span>\n<span class=\"line\"><span style=\"color: #e0def4\">    &#125;</span></span>\n<span class=\"line\"><span style=\"color: #e0def4\">&#125;</span></span>\n<span class=\"line\"><span style=\"color: #e0def4\"></span></span></code></pre></div><ol start=\"2\">\n<li>Client</li>\n</ol>\n<div class=\"language-txt\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">txt</span><pre class=\"shiki rose-pine-moon\" style=\"background-color: #232136\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #e0def4\">package com.example.test;</span></span>\n<span class=\"line\"><span style=\"color: #e0def4\"></span></span>\n<span class=\"line\"><span style=\"color: #e0def4\">import java.lang.reflect.InvocationHandler;</span></span>\n<span class=\"line\"><span style=\"color: #e0def4\">import java.lang.reflect.Method;</span></span>\n<span class=\"line\"><span style=\"color: #e0def4\">import java.lang.reflect.Proxy;</span></span>\n<span class=\"line\"><span style=\"color: #e0def4\"></span></span>\n<span class=\"line\"><span style=\"color: #e0def4\">public class UserServiceInvocationHandler implements InvocationHandler &#123;</span></span>\n<span class=\"line\"><span style=\"color: #e0def4\">    //被代理的对象</span></span>\n<span class=\"line\"><span style=\"color: #e0def4\">    private Object target;</span></span>\n<span class=\"line\"><span style=\"color: #e0def4\"></span></span>\n<span class=\"line\"><span style=\"color: #e0def4\">    //获取代理对象</span></span>\n<span class=\"line\"><span style=\"color: #e0def4\">    public Object getProxy()&#123;</span></span>\n<span class=\"line\"><span style=\"color: #e0def4\">        return Proxy.newProxyInstance(this.getClass().getClassLoader(), target.getClass().getInterfaces(),this);</span></span>\n<span class=\"line\"><span style=\"color: #e0def4\">    &#125;</span></span>\n<span class=\"line\"><span style=\"color: #e0def4\"></span></span>\n<span class=\"line\"><span style=\"color: #e0def4\">    public void setTarget(Object target)&#123;</span></span>\n<span class=\"line\"><span style=\"color: #e0def4\">        this.target = target;</span></span>\n<span class=\"line\"><span style=\"color: #e0def4\">    &#125;</span></span>\n<span class=\"line\"><span style=\"color: #e0def4\">    //代理对象以及代理调用方法时候，都会invoke这个</span></span>\n<span class=\"line\"><span style=\"color: #e0def4\">    @Override</span></span>\n<span class=\"line\"><span style=\"color: #e0def4\">    public Object invoke(Object proxy, Method method, Object[] args) throws Throwable &#123;</span></span>\n<span class=\"line\"><span style=\"color: #e0def4\">        log(method.getName());</span></span>\n<span class=\"line\"><span style=\"color: #e0def4\">        return method.invoke(target, args);</span></span>\n<span class=\"line\"><span style=\"color: #e0def4\">    &#125;</span></span>\n<span class=\"line\"><span style=\"color: #e0def4\"></span></span>\n<span class=\"line\"><span style=\"color: #e0def4\">    private void log(String msg)&#123;</span></span>\n<span class=\"line\"><span style=\"color: #e0def4\">        System.out.println(&quot;Calling&quot; + msg);</span></span>\n<span class=\"line\"><span style=\"color: #e0def4\">    &#125;</span></span>\n<span class=\"line\"><span style=\"color: #e0def4\">&#125;</span></span>\n<span class=\"line\"><span style=\"color: #e0def4\"></span></span></code></pre></div>","text":"手写 简易版 Spring1. 手写一个注解 在 Java 中， 单单写一个注解其实没有什么作用。就像在大街上走路， 你在别人眼中只是一个普通人而已。 注解也是...","permalink":"/post/Spring笔记","photos":[],"count_time":{"symbolsCount":"23k","symbolsTime":"21 mins."},"categories":[{"name":"后端开发","slug":"后端开发","count":1,"path":"api/categories/后端开发.json"}],"tags":[{"name":"Spring","slug":"Spring","count":2,"path":"api/tags/Spring.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E6%89%8B%E5%86%99-%E7%AE%80%E6%98%93%E7%89%88-Spring\"><span class=\"toc-text\">手写 简易版 Spring</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#1-%E6%89%8B%E5%86%99%E4%B8%80%E4%B8%AA%E6%B3%A8%E8%A7%A3\"><span class=\"toc-text\">1. 手写一个注解</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#2-%E6%A8%A1%E6%8B%9F%E4%B8%9A%E5%8A%A1\"><span class=\"toc-text\">2. 模拟业务</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#3-%E6%89%8B%E5%86%99-SpringConfigParser\"><span class=\"toc-text\">3. 手写 SpringConfigParser</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#3-1-%E6%A8%A1%E6%8B%9F%E5%90%AF%E5%8A%A8%E7%B1%BB\"><span class=\"toc-text\">3.1 模拟启动类</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#4-%E6%89%8B%E5%86%99-ClassPathXmlApplicationContext\"><span class=\"toc-text\">4. 手写 ClassPathXmlApplicatio\tnContext</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#4-1-%E6%9E%84%E9%80%A0%E6%96%B9%E6%B3%95-%E5%92%8C-%E6%88%90%E5%91%98%E5%8F%98%E9%87%8F\"><span class=\"toc-text\">4.1 构造方法 和 成员变量</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#4-2-%E5%88%9D%E5%A7%8B%E5%8C%96-IoC%E5%AE%B9%E5%99%A8\"><span class=\"toc-text\">4.2 初始化 IoC容器</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#4-3-%E8%8E%B7%E5%8F%96-%E9%9C%80%E8%A6%81%E8%A2%AB%E6%89%AB%E6%8F%8F%E7%9A%84%E5%8C%85-%E7%9A%84%E8%B7%AF%E5%BE%84\"><span class=\"toc-text\">4.3 获取 需要被扫描的包 的路径</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#4-4-%E5%8A%A0%E8%BD%BD-%E8%A2%AB%E6%89%AB%E6%8F%8F%E5%8C%85-%E4%B8%8B%E7%9A%84%E6%89%80%E6%9C%89%E7%B1%BB-class%E7%BB%93%E5%B0%BE\"><span class=\"toc-text\">4.4 加载 被扫描包 下的所有类 (class结尾)</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#4-5-%E5%B0%86-%E7%BB%9D%E5%AF%B9%E8%B7%AF%E5%BE%84-%E8%BD%AC%E6%8D%A2%E6%88%90-%E7%B1%BB%E8%B7%AF%E5%BE%84\"><span class=\"toc-text\">4.5 将 绝对路径 转换成 类路径</span></a></li></ol></li></ol></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#Spring%E5%A4%8D%E4%B9%A0%E7%AC%94%E8%AE%B0\"><span class=\"toc-text\">Spring复习笔记</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#LC1-%E4%BB%BB%E4%BD%95%E9%A1%B9%E7%9B%AE%EF%BC%8C%E9%A6%96%E5%85%88%E5%85%88%E5%AF%BC%E8%BF%99%E4%B8%A4%E4%B8%AAmaven\"><span class=\"toc-text\">LC1. 任何项目，首先先导这两个maven</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#LC2-Spring%E7%AE%80%E4%BB%8B\"><span class=\"toc-text\">LC2. Spring简介</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#LC3-Spring-IOC\"><span class=\"toc-text\">LC3. Spring IOC</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#LC4-IOC%E6%9C%AC%E8%B4%A8\"><span class=\"toc-text\">LC4: IOC本质</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#LC5-Bean-Definition-Inheritance-Bean%E6%A0%87%E7%AD%BE%E7%9A%84%E7%90%86%E8%A7%A3\"><span class=\"toc-text\">LC5: Bean Definition Inheritance (Bean标签的理解)</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#LC6-Spring%E5%AF%B9%E8%B1%A1%E7%9A%84%E5%88%9B%E5%BB%BA\"><span class=\"toc-text\">LC6. Spring对象的创建</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#1-BeanPostProcessor-%E6%98%AF%E4%BB%80%E4%B9%88%EF%BC%9F\"><span class=\"toc-text\">1.BeanPostProcessor 是什么？</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#LC7-Spring%E9%85%8D%E7%BD%AE%E8%AF%A6%E8%A7%A3\"><span class=\"toc-text\">LC7. Spring配置详解</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#1-%E5%88%AB%E5%90%8D\"><span class=\"toc-text\">1. 别名</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#2-Import\"><span class=\"toc-text\">2. Import</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#LC8-%E4%BE%9D%E8%B5%96%E6%B3%A8%E5%85%A5\"><span class=\"toc-text\">LC8. 依赖注入</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#1-%E6%9E%84%E9%80%A0%E5%99%A8%E6%B3%A8%E5%85%A5\"><span class=\"toc-text\">1. 构造器注入</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#2-Set%E6%96%B9%E5%BC%8F%E6%B3%A8%E5%85%A5\"><span class=\"toc-text\">2. Set方式注入</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#3-%E6%8B%93%E5%B1%95%E6%96%B9%E5%BC%8F%E6%B3%A8%E5%85%A5\"><span class=\"toc-text\">3. 拓展方式注入</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#LC9-Bean%E7%9A%84%E4%BD%9C%E7%94%A8%E5%9F%9F\"><span class=\"toc-text\">LC9. Bean的作用域</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#LC10-Bean%E7%9A%84%E8%87%AA%E5%8A%A8%E8%A3%85%E9%85%8D\"><span class=\"toc-text\">LC10. Bean的自动装配</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#1-Autowired%E5%8F%AF%E4%BB%A5%E7%94%A8%E5%9C%A8%E5%93%AA%E9%87%8C\"><span class=\"toc-text\">1. Autowired可以用在哪里</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#2-Autowire%E5%A4%B1%E8%B4%A5%E6%9D%A1%E4%BB%B6\"><span class=\"toc-text\">2. Autowire失败条件</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#3-Autowiresd-required-false-%E6%84%8F%E6%80%9D\"><span class=\"toc-text\">3. @Autowiresd(required&#x3D; false) 意思</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#4-%E4%BB%80%E4%B9%88%E6%98%AFQualifier\"><span class=\"toc-text\">4. 什么是Qualifier</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#5-Resource%E6%B3%A8%E8%A7%A3\"><span class=\"toc-text\">5. Resource注解</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#LC11-%E6%B3%A8%E8%A7%A3%E5%BC%80%E5%8F%91\"><span class=\"toc-text\">LC11 注解开发</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#components%E6%B3%A8%E8%A7%A3%E7%9A%84%E8%A1%8D%E7%94%9F\"><span class=\"toc-text\">@components注解的衍生</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#LC12-%E4%BD%BF%E7%94%A8%E7%BA%AFJava%E9%85%8D%E7%BD%AESpring\"><span class=\"toc-text\">LC12. 使用纯Java配置Spring</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#LC13-AOP\"><span class=\"toc-text\">LC13. AOP</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F-%E4%BB%A3%E7%90%86%E6%A8%A1%E5%BC%8F%EF%BC%88AOP%E5%BA%95%E5%B1%82%EF%BC%89\"><span class=\"toc-text\">设计模式-代理模式（AOP底层）</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#1-%E9%9D%99%E6%80%81%E4%BB%A3%E7%90%86\"><span class=\"toc-text\">1. 静态代理</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#2-%E5%8A%A8%E6%80%81%E4%BB%A3%E7%90%86\"><span class=\"toc-text\">2. 动态代理</span></a></li></ol></li></ol></li></ol></li></ol>","author":{"name":"Kangwei Zhu","slug":"blog-author","avatar":"https://avatars.githubusercontent.com/u/93107633?v=4","link":"/","description":"偏我来时不逢春，偏我去时春满城","socials":{"github":"https://github.com/KangweiZhu","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"leetcode":{"icon":"/svg/leetcode-svgrepo-com.svg","link":"https://leetcode.com/anicaaovo/"}}}},"mapped":true,"hidden":false,"prev_post":{"title":"多线程笔记","uid":"a8cb7e5b0948656e80258acbb14ae2c8","slug":"多线程","date":"2023-03-11T21:02:04.000Z","updated":"2024-02-23T21:57:36.757Z","comments":true,"path":"api/articles/多线程.json","keywords":"Kangwei Zhu's Blog","cover":"/img/cake.jpg","text":"Thread的三种创建方式1. 继承Thread类 重写run()方法。将run()方法中内容替换成你想要的代码逻辑。然后创建这个线程的对象，调用start()...","permalink":"/post/多线程","photos":[],"count_time":{"symbolsCount":"14k","symbolsTime":"13 mins."},"categories":[{"name":"Java基础","slug":"Java基础","count":3,"path":"api/categories/Java基础.json"}],"tags":[{"name":"Java多线程","slug":"Java多线程","count":1,"path":"api/tags/Java多线程.json"}],"author":{"name":"Kangwei Zhu","slug":"blog-author","avatar":"https://avatars.githubusercontent.com/u/93107633?v=4","link":"/","description":"偏我来时不逢春，偏我去时春满城","socials":{"github":"https://github.com/KangweiZhu","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"leetcode":{"icon":"/svg/leetcode-svgrepo-com.svg","link":"https://leetcode.com/anicaaovo/"}}}}},"next_post":{"title":"接口测试","uid":"c5b4816193947aa93e977c106cb13634","slug":"接口自动化","date":"2023-02-12T01:34:49.000Z","updated":"2024-02-23T21:57:36.757Z","comments":true,"path":"api/articles/接口自动化.json","keywords":"Kangwei Zhu's Blog","cover":"/img/rice.jpg","text":"1. 回顾1.1 URLURL： 统一资源定位符 格式： 协议:&#x2F;&#x2F;hostname:port&#x2F;path?参数&#x3D;值&am...","permalink":"/post/接口自动化","photos":[],"count_time":{"symbolsCount":"5.1k","symbolsTime":"5 mins."},"categories":[{"name":"软件测试","slug":"软件测试","count":5,"path":"api/categories/软件测试.json"}],"tags":[{"name":"软件测试","slug":"软件测试","count":2,"path":"api/tags/软件测试.json"}],"author":{"name":"Kangwei Zhu","slug":"blog-author","avatar":"https://avatars.githubusercontent.com/u/93107633?v=4","link":"/","description":"偏我来时不逢春，偏我去时春满城","socials":{"github":"https://github.com/KangweiZhu","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"leetcode":{"icon":"/svg/leetcode-svgrepo-com.svg","link":"https://leetcode.com/anicaaovo/"}}}}}}